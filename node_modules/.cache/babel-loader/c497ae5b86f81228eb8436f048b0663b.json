{"ast":null,"code":"var _jsxFileName = \"/home/pieroashady/VSCode/ReactProjects/reco-dashboard2/src/layouts/Admin.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotificationSystem from 'react-notification-system';\nimport AdminNavbar from 'components/Navbars/AdminNavbar';\nimport Footer from 'components/Footer/Footer';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport FixedPlugin from 'components/FixedPlugin/FixedPlugin.jsx';\nimport { style } from 'variables/Variables.jsx';\nimport routes from 'routes.js';\nimport image from 'assets/img/sidebar-3.jpg';\nimport Header from 'components/Navbars/AdminNavbar';\n\nclass Admin extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handleNotificationClick = position => {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n\n      switch (color) {\n        case 1:\n          level = 'success';\n          break;\n\n        case 2:\n          level = 'warning';\n          break;\n\n        case 3:\n          level = 'error';\n          break;\n\n        case 4:\n          level = 'info';\n          break;\n\n        default:\n          break;\n      }\n\n      this.state._notificationSystem.addNotification({\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          \"data-notify\": \"icon\",\n          className: \"pe-7s-gift\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 14\n          }\n        }),\n        message: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }\n        }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n        level: level,\n        position: position,\n        autoDismiss: 15\n      });\n    };\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === '/admin') {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n              handleClick: this.handleNotificationClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 32\n              }\n            })),\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return 'Brand';\n    };\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleHasImage = hasImage => {\n      this.setState({\n        hasImage: hasImage\n      });\n    };\n\n    this.handleFixedClick = () => {\n      if (this.state.fixedClasses === 'dropdown') {\n        this.setState({\n          fixedClasses: 'dropdown show-dropdown open'\n        });\n      } else {\n        this.setState({\n          fixedClasses: 'dropdown'\n        });\n      }\n    };\n\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: 'black',\n      hasImage: true,\n      fixedClasses: 'dropdown show-dropdown open'\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      _notificationSystem: this.refs.notificationSystem\n    });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n\n    switch (color) {\n      case 1:\n        level = 'success';\n        break;\n\n      case 2:\n        level = 'warning';\n        break;\n\n      case 3:\n        level = 'error';\n        break;\n\n      case 4:\n        level = 'info';\n        break;\n\n      default:\n        break;\n    } // _notificationSystem.addNotification({\n    //   title: <span data-notify='icon' className='pe-7s-gift' />,\n    //   message: (\n    //     <div>\n    //       Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for every web developer.\n    //     </div>\n    //   ),\n    //   level: level,\n    //   position: 'tr',\n    //   autoDismiss: 15\n    // });\n\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-open') !== -1) {\n      document.documentElement.classList.toggle('nav-open');\n    }\n\n    if (e.history.action === 'PUSH') {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      routes: routes,\n      image: this.state.image,\n      color: this.state.color,\n      hasImage: this.state.hasImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      brandText: this.getBrandText(routes),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, this.getRoutes(routes)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/home/pieroashady/VSCode/ReactProjects/reco-dashboard2/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","AdminNavbar","Footer","Sidebar","FixedPlugin","style","routes","image","Header","Admin","constructor","props","handleNotificationClick","position","color","Math","floor","random","level","state","_notificationSystem","addNotification","title","message","autoDismiss","getRoutes","map","prop","key","layout","path","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","setState","handleColorClick","handleHasImage","hasImage","handleFixedClick","fixedClasses","componentDidMount","refs","notificationSystem","componentDidUpdate","e","window","innerWidth","history","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","mainPanel","render"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotificationSystem from 'react-notification-system';\n\nimport AdminNavbar from 'components/Navbars/AdminNavbar';\nimport Footer from 'components/Footer/Footer';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport FixedPlugin from 'components/FixedPlugin/FixedPlugin.jsx';\n\nimport { style } from 'variables/Variables.jsx';\n\nimport routes from 'routes.js';\n\nimport image from 'assets/img/sidebar-3.jpg';\nimport Header from 'components/Navbars/AdminNavbar';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: 'black',\n      hasImage: true,\n      fixedClasses: 'dropdown show-dropdown open'\n    };\n  }\n  handleNotificationClick = (position) => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = 'success';\n        break;\n      case 2:\n        level = 'warning';\n        break;\n      case 3:\n        level = 'error';\n        break;\n      case 4:\n        level = 'info';\n        break;\n      default:\n        break;\n    }\n    this.state._notificationSystem.addNotification({\n      title: <span data-notify='icon' className='pe-7s-gift' />,\n      message: (\n        <div>\n          Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for every web developer.\n        </div>\n      ),\n      level: level,\n      position: position,\n      autoDismiss: 15\n    });\n  };\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === '/admin') {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => <prop.component {...props} handleClick={this.handleNotificationClick} />}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return 'Brand';\n  };\n  handleImageClick = (image) => {\n    this.setState({ image: image });\n  };\n  handleColorClick = (color) => {\n    this.setState({ color: color });\n  };\n  handleHasImage = (hasImage) => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === 'dropdown') {\n      this.setState({ fixedClasses: 'dropdown show-dropdown open' });\n    } else {\n      this.setState({ fixedClasses: 'dropdown' });\n    }\n  };\n  componentDidMount() {\n    this.setState({ _notificationSystem: this.refs.notificationSystem });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = 'success';\n        break;\n      case 2:\n        level = 'warning';\n        break;\n      case 3:\n        level = 'error';\n        break;\n      case 4:\n        level = 'info';\n        break;\n      default:\n        break;\n    }\n    // _notificationSystem.addNotification({\n    //   title: <span data-notify='icon' className='pe-7s-gift' />,\n    //   message: (\n    //     <div>\n    //       Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for every web developer.\n    //     </div>\n    //   ),\n    //   level: level,\n    //   position: 'tr',\n    //   autoDismiss: 15\n    // });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf('nav-open') !== -1\n    ) {\n      document.documentElement.classList.toggle('nav-open');\n    }\n    if (e.history.action === 'PUSH') {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  render() {\n    return (\n      <div className='wrapper'>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          image={this.state.image}\n          color={this.state.color}\n          hasImage={this.state.hasImage}\n        />\n        <div id='main-panel' className='main-panel' ref='mainPanel'>\n          <Header brandText={this.getBrandText(routes)} />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Footer />\n          {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state['color']}\n            bgImage={this.state['image']}\n            mini={this.state['mini']}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}