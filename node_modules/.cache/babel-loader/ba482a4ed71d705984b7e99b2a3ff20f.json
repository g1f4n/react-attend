{"ast":null,"code":"import _slicedToArray from \"/home/pieroashady/VSCode/ReactProjects/txa/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/Quiz.jsx\";\nimport React, { Component, useState } from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionCounter: 0,\n      answer: '',\n      score: 0,\n      myQuestion: [{\n        question: 'Who invented JavaScript?',\n        answers: ['Douglas Crockford', 'Sheryl Sandberg', 'Brendan Eich'],\n        correctAnswer: 2\n      }, {\n        question: 'Which one of these is a JavaScript package manager?',\n        answers: ['Node.js', 'TypeScript', 'npm'],\n        correctAnswer: 2\n      }, {\n        question: 'Which tool can you use to ensure code quality?',\n        answers: ['Angular', 'jQuery', 'RequireJS'],\n        correctAnswer: 2\n      }]\n    };\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  componentDidMount() {// if (this.state.questionCounter >= 2) {\n    // \tthis.setState({ questionCounter: 0 });\n    // }\n  }\n\n  onSelect(e) {\n    e.preventDefault();\n    this.setState({\n      answer: e.target.label\n    });\n    console.log(this.state.answer);\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    const _this$state = this.state,\n          myQuestion = _this$state.myQuestion,\n          questionCounter = _this$state.questionCounter;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      as: \"legend\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }, \"Radios\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(QuestionBox, {\n      question: myQuestion[questionCounter].question,\n      option: myQuestion[questionCounter].answers,\n      correctAnswer: myQuestion[questionCounter].correctAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (this.state.answer === '') {\n          return alert('must be answered');\n        }\n\n        if (this.state.answer === this.state.myQuestion[this.state.questionCounter].correctAnswer) {\n          this.setState(prevState => ({\n            score: prevState.score + 10\n          }));\n          console.log(this.state.score);\n        }\n\n        if (this.state.questionCounter == 2) {\n          console.log(this.state.questionCounter);\n          return this.setState({\n            questionCounter: 0\n          });\n        }\n\n        this.setState(prevState => ({\n          questionCounter: prevState.questionCounter + 1\n        }));\n        console.log(this.state.questionCounter);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, \"Next\")) // <Form>\n    // \t{myQuestions.map(({ answers, question }, index) => {\n    // \t\treturn Object.keys(answers).map((key, i) => {\n    // \t\t\treturn (\n    // \t\t\t\t<div key={i} className=\"mb-3\">\n    // \t\t\t\t\t<Form.Group>\n    // \t\t\t\t\t\t<Col sm={10}>\n    // \t\t\t\t\t\t\t<Form.Check\n    // \t\t\t\t\t\t\t\tonClick={(e) => console.log(e.target.value)}\n    // \t\t\t\t\t\t\t\ttype=\"radio\"\n    // \t\t\t\t\t\t\t\tvalue={key}\n    // \t\t\t\t\t\t\t\tid={i}\n    // \t\t\t\t\t\t\t\tlabel={answers[key]}\n    // \t\t\t\t\t\t\t/>\n    // \t\t\t\t\t\t</Col>\n    // \t\t\t\t\t</Form.Group>\n    // \t\t\t\t</div>\n    // \t\t\t);\n    // \t\t});\n    // \t\t// Object.keys(answers).forEach((key, i) => {\n    // \t\t// \t<div className=\"mb-3\">\n    // \t\t// \t\t<Form.Check\n    // \t\t// \t\t\tonClick={(e) => console.log(e.target.value)}\n    // \t\t// \t\t\ttype=\"radio\"\n    // \t\t// \t\t\tvalue={key}\n    // \t\t// \t\t\tid={`default-radio`}\n    // \t\t// \t\t\tlabel={answers[key]}\n    // \t\t// \t\t/>\n    // \t\t// \t</div>;\n    // \t\t// });\n    // \t})}\n    // </Form>\n    ;\n  }\n\n}\n\nfunction QuestionBox({\n  question,\n  option,\n  correctAnswer\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        click = _useState2[0],\n        setClicked = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, question), option.map((text, index) => /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      color: click ? 'red' : 'black'\n    },\n    onClick: e => {\n      setClicked(true);\n      console.log(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, text)));\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/Quiz.jsx"],"names":["React","Component","useState","Form","Col","Row","Quiz","constructor","props","state","questionCounter","answer","score","myQuestion","question","answers","correctAnswer","onSelect","bind","componentDidMount","e","preventDefault","setState","target","label","console","log","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","alert","prevState","QuestionBox","option","click","setClicked","map","text","index","color"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\n\nclass Quiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tquestionCounter: 0,\n\t\t\tanswer: '',\n\t\t\tscore: 0,\n\t\t\tmyQuestion: [\n\t\t\t\t{\n\t\t\t\t\tquestion: 'Who invented JavaScript?',\n\t\t\t\t\tanswers: [ 'Douglas Crockford', 'Sheryl Sandberg', 'Brendan Eich' ],\n\t\t\t\t\tcorrectAnswer: 2\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tquestion: 'Which one of these is a JavaScript package manager?',\n\t\t\t\t\tanswers: [ 'Node.js', 'TypeScript', 'npm' ],\n\t\t\t\t\tcorrectAnswer: 2\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tquestion: 'Which tool can you use to ensure code quality?',\n\t\t\t\t\tanswers: [ 'Angular', 'jQuery', 'RequireJS' ],\n\t\t\t\t\tcorrectAnswer: 2\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tthis.onSelect = this.onSelect.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\t// if (this.state.questionCounter >= 2) {\n\t\t// \tthis.setState({ questionCounter: 0 });\n\t\t// }\n\t}\n\tonSelect(e) {\n\t\te.preventDefault();\n\t\tthis.setState({ answer: e.target.label });\n\t\tconsole.log(this.state.answer);\n\t}\n\tshuffle(array) {\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t}\n\trender() {\n\t\tconst { myQuestion, questionCounter } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t<Form.Label as=\"legend\" column sm={2}>\n\t\t\t\t\t\tRadios\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t{/* {myQuestion.map((x, i) => ( */}\n\t\t\t\t\t\t<QuestionBox\n\t\t\t\t\t\t\tquestion={myQuestion[questionCounter].question}\n\t\t\t\t\t\t\toption={myQuestion[questionCounter].answers}\n\t\t\t\t\t\t\tcorrectAnswer={myQuestion[questionCounter].correctAnswer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* ))} */}\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (this.state.answer === '') {\n\t\t\t\t\t\t\treturn alert('must be answered');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.state.answer ===\n\t\t\t\t\t\t\tthis.state.myQuestion[this.state.questionCounter].correctAnswer\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t\t\t\tscore: prevState.score + 10\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\tconsole.log(this.state.score);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.state.questionCounter == 2) {\n\t\t\t\t\t\t\tconsole.log(this.state.questionCounter);\n\t\t\t\t\t\t\treturn this.setState({ questionCounter: 0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t\t\tquestionCounter: prevState.questionCounter + 1\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tconsole.log(this.state.questionCounter);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t// <Form>\n\t\t\t// \t{myQuestions.map(({ answers, question }, index) => {\n\t\t\t// \t\treturn Object.keys(answers).map((key, i) => {\n\t\t\t// \t\t\treturn (\n\t\t\t// \t\t\t\t<div key={i} className=\"mb-3\">\n\t\t\t// \t\t\t\t\t<Form.Group>\n\t\t\t// \t\t\t\t\t\t<Col sm={10}>\n\t\t\t// \t\t\t\t\t\t\t<Form.Check\n\t\t\t// \t\t\t\t\t\t\t\tonClick={(e) => console.log(e.target.value)}\n\t\t\t// \t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t// \t\t\t\t\t\t\t\tvalue={key}\n\t\t\t// \t\t\t\t\t\t\t\tid={i}\n\t\t\t// \t\t\t\t\t\t\t\tlabel={answers[key]}\n\t\t\t// \t\t\t\t\t\t\t/>\n\t\t\t// \t\t\t\t\t\t</Col>\n\t\t\t// \t\t\t\t\t</Form.Group>\n\t\t\t// \t\t\t\t</div>\n\t\t\t// \t\t\t);\n\t\t\t// \t\t});\n\t\t\t// \t\t// Object.keys(answers).forEach((key, i) => {\n\t\t\t// \t\t// \t<div className=\"mb-3\">\n\t\t\t// \t\t// \t\t<Form.Check\n\t\t\t// \t\t// \t\t\tonClick={(e) => console.log(e.target.value)}\n\t\t\t// \t\t// \t\t\ttype=\"radio\"\n\t\t\t// \t\t// \t\t\tvalue={key}\n\t\t\t// \t\t// \t\t\tid={`default-radio`}\n\t\t\t// \t\t// \t\t\tlabel={answers[key]}\n\t\t\t// \t\t// \t\t/>\n\t\t\t// \t\t// \t</div>;\n\t\t\t// \t\t// });\n\t\t\t// \t})}\n\t\t\t// </Form>\n\t\t);\n\t}\n}\n\nfunction QuestionBox({ question, option, correctAnswer }) {\n\tconst [ click, setClicked ] = useState(false);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>{question}</p>\n\t\t\t{option.map((text, index) => (\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: click ? 'red' : 'black'\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tsetClicked(true);\n\t\t\t\t\t\tconsole.log(text);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{text}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}