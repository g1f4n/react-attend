{"ast":null,"code":"var _jsxFileName = \"E:\\\\Node.js Project\\\\project dika\\\\dika-attend\\\\react-attend\\\\src\\\\views\\\\ViewDetailEarly.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, FormGroup, ControlLabel, FormControl, Form, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport { Card } from 'components/Card/Card.jsx';\nimport { FormInputs } from 'components/FormInputs/FormInputs.jsx';\nimport { UserCard } from 'components/UserCard/UserCard.jsx';\nimport Button from 'components/CustomButton/CustomButton.jsx';\nimport avatar from 'assets/img/faces/face-3.jpg';\nimport Axios from 'axios';\nimport { baseurl } from 'utils/baseurl';\nimport Parse from 'parse';\nimport ModalHandler from './Category/ModalHandler';\nimport moment from 'moment';\nimport DateTime from 'react-datetime';\nimport { Link } from 'react-router-dom';\nimport { handleConvert } from 'utils/converter';\n\nclass ViewDetailEarly extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leave: [],\n      loading: false,\n      buttonLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.getDetailEarly();\n  }\n\n  getDetailEarly() {\n    // this.state({ loading: true });\n    const objectId = this.props.match.params.objectId;\n    const Leave = Parse.Object.extend('EarlyLeave');\n    const Leader = Parse.Object.extend('Leader');\n    const leader = new Leader();\n    const query = new Parse.Query(Leave);\n    console.log(Parse.User.current().get('leaderId').id);\n    leader.id = Parse.User.current().get('leaderId').id;\n    query.equalTo('leaderId', leader); // query.equalTo('user', objectId);\n\n    query.equalTo('status', 3);\n    query.find().then(x => {\n      console.log(x);\n      this.setState({\n        leave: x,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const objectId = this.props.match.params.objectId;\n    const leave = this.state.leave;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Data late\",\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleFilter,\n        style: {\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 61\n        }\n      }, \"Search by approval\")), /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          span: 2\n        },\n        className: \"pull-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\" // defaultValue={1}\n        ,\n        onChange: e => {\n          console.log(e.target.value);\n          this.setState({\n            status: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 61\n        }\n      }, [3, 1, 0].map(x => /*#__PURE__*/React.createElement(\"option\", {\n        value: x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 69\n        }\n      }, handleConvert(x))))), /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          span: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\" // disable={loading ? 'true' : 'false'}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 65\n        }\n      }), ' ')))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 41\n        }\n      }, leave.length < 1 ? /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 49\n        }\n      }, \"No data found...\") : leave.map((x, i) => /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(UserCard, {\n        out: x.status,\n        bgImage: /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\",\n          alt: \"...\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 69\n          }\n        }),\n        avatar: x.attributes.imageSelfie == undefined ? 'https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400' : x.attributes.imageSelfie.url(),\n        name: x.get('fullname').split(' ').slice(0, 2).join(' '),\n        userName: x.get('descIzin'),\n        description: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 69\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 77\n          }\n        }, \"Absen masuk:\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 77\n          }\n        }), moment(x.get('time')).format('DD/MM/YYYY [at] HH:mm:ss')), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 73\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 77\n          }\n        }, \"Late reason:\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 77\n          }\n        }), x.get('alasan'))),\n        status: x.get('status'),\n        socials: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 69\n          }\n        }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n          placement: \"right\" // overlay={tooltip('Approve')}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          simple: true,\n          onClick: () => {\n            this.setState({\n              editMode: true,\n              userId: x.id,\n              userIndex: i,\n              fullnames: x.get('fullname')\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-check\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 81\n          }\n        }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n          placement: \"right\" // overlay={tooltip('Reject')}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          simple: true,\n          onClick: e => {\n            this.setState({\n              deleteMode: true,\n              userId: x.id,\n              userIndex: i,\n              fullnames: x.get('fullname')\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-close\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 81\n          }\n        })))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 61\n        }\n      }))))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default ViewDetailEarly;","map":{"version":3,"sources":["E:/Node.js Project/project dika/dika-attend/react-attend/src/views/ViewDetailEarly.jsx"],"names":["React","Component","Container","Row","Col","FormGroup","ControlLabel","FormControl","Form","Tooltip","OverlayTrigger","Card","FormInputs","UserCard","Button","avatar","Axios","baseurl","Parse","ModalHandler","moment","DateTime","Link","handleConvert","ViewDetailEarly","constructor","props","state","leave","loading","buttonLoading","componentDidMount","getDetailEarly","objectId","match","params","Leave","Object","extend","Leader","leader","query","Query","console","log","User","current","get","id","equalTo","find","then","x","setState","render","handleFilter","marginBottom","span","e","target","value","status","map","length","i","attributes","imageSelfie","undefined","url","split","slice","join","format","editMode","userId","userIndex","fullnames","deleteMode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    ControlLabel,\r\n    FormControl,\r\n    Form,\r\n    Tooltip,\r\n    OverlayTrigger\r\n} from 'react-bootstrap';\r\n\r\nimport { Card } from 'components/Card/Card.jsx';\r\nimport { FormInputs } from 'components/FormInputs/FormInputs.jsx';\r\nimport { UserCard } from 'components/UserCard/UserCard.jsx';\r\nimport Button from 'components/CustomButton/CustomButton.jsx';\r\n\r\nimport avatar from 'assets/img/faces/face-3.jpg';\r\nimport Axios from 'axios';\r\nimport { baseurl } from 'utils/baseurl';\r\nimport Parse from 'parse';\r\nimport ModalHandler from './Category/ModalHandler';\r\nimport moment from 'moment';\r\nimport DateTime from 'react-datetime';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleConvert } from 'utils/converter';\r\n\r\nclass ViewDetailEarly extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leave: [],\r\n            loading: false,\r\n            buttonLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetailEarly();\r\n    }\r\n\r\n    getDetailEarly() {\r\n        // this.state({ loading: true });\r\n        const objectId = this.props.match.params.objectId;\r\n        const Leave = Parse.Object.extend('EarlyLeave');\r\n        const Leader = Parse.Object.extend('Leader');\r\n        const leader = new Leader();\r\n        const query = new Parse.Query(Leave);\r\n\r\n        console.log(Parse.User.current().get('leaderId').id);\r\n\r\n        leader.id = Parse.User.current().get('leaderId').id;\r\n        query.equalTo('leaderId', leader);\r\n        // query.equalTo('user', objectId);\r\n        query.equalTo('status', 3);\r\n        query.find().then((x) => {\r\n            console.log(x);\r\n            this.setState({ leave: x, loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const objectId = this.props.match.params.objectId;\r\n        const { leave } = this.state;\r\n\r\n        return (\r\n            <div className=\"content\">\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Card\r\n                                title=\"Data late\"\r\n                                content={\r\n                                    <div>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form\r\n                                                    onSubmit={this.handleFilter}\r\n                                                    style={{ marginBottom: '20px' }}\r\n                                                >\r\n                                                    <Form.Group\r\n                                                        as={Row}\r\n                                                        controlId=\"formHorizontalEmail\"\r\n                                                    >\r\n                                                        <Col sm={2}>\r\n                                                            <p>Search by approval</p>\r\n                                                        </Col>\r\n                                                        <Col\r\n                                                            sm={{ span: 2 }}\r\n                                                            className=\"pull-right\"\r\n                                                        >\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                // defaultValue={1}\r\n                                                                onChange={(e) => {\r\n                                                                    console.log(e.target.value);\r\n                                                                    this.setState({\r\n                                                                        status: e.target.value\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                {[3, 1, 0].map((x) => (\r\n                                                                    <option value={x}>\r\n                                                                        {handleConvert(x)}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                        <Col sm={{ span: 2 }}>\r\n                                                            <Button\r\n                                                                variant=\"primary\"\r\n                                                                type=\"submit\"\r\n                                                            // disable={loading ? 'true' : 'false'}\r\n                                                            >\r\n                                                                <i className=\"fa fa-search\" />{' '}\r\n                                                                {/* {loading ? 'Fetching...' : 'Search'} */}\r\n                                                            </Button>\r\n                                                        </Col>\r\n                                                    </Form.Group>\r\n                                                </Form>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            {leave.length < 1 ? (\r\n                                                <Col md={12}>No data found...</Col>\r\n                                            ) : (\r\n                                                    leave.map((x, i) => (\r\n                                                        <Col md={3}>\r\n                                                            <UserCard\r\n                                                                out={x.status}\r\n                                                                bgImage={\r\n                                                                    <img\r\n                                                                        src=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\r\n                                                                        alt=\"...\"\r\n                                                                    />\r\n                                                                }\r\n                                                                avatar={\r\n                                                                    x.attributes.imageSelfie ==\r\n                                                                        undefined ? (\r\n                                                                            'https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400'\r\n                                                                        ) : (\r\n                                                                            x.attributes.imageSelfie.url()\r\n                                                                        )\r\n                                                                }\r\n                                                                name={x\r\n                                                                    .get('fullname')\r\n                                                                    .split(' ')\r\n                                                                    .slice(0, 2)\r\n                                                                    .join(' ')}\r\n                                                                userName={x.get('descIzin')}\r\n                                                                description={\r\n                                                                    <span>\r\n                                                                        <span>\r\n                                                                            <strong>\r\n                                                                                Absen masuk:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n                                                                            <br />\r\n                                                                            {moment(\r\n                                                                                x.get('time')\r\n                                                                            ).format(\r\n                                                                                'DD/MM/YYYY [at] HH:mm:ss'\r\n                                                                            )}\r\n                                                                        </span>\r\n                                                                        <br />\r\n                                                                        <span>\r\n                                                                            <strong>\r\n                                                                                Late reason:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n                                                                            <br />\r\n                                                                            {x.get('alasan')}\r\n                                                                        </span>\r\n                                                                    </span>\r\n                                                                }\r\n                                                                status={x.get('status')}\r\n                                                                socials={\r\n                                                                    <div>\r\n                                                                        <OverlayTrigger\r\n                                                                            placement=\"right\"\r\n                                                                        // overlay={tooltip('Approve')}\r\n                                                                        >\r\n                                                                            <Button\r\n                                                                                simple\r\n                                                                                onClick={() => {\r\n                                                                                    this.setState({\r\n                                                                                        editMode: true,\r\n                                                                                        userId: x.id,\r\n                                                                                        userIndex: i,\r\n                                                                                        fullnames: x.get(\r\n                                                                                            'fullname'\r\n                                                                                        )\r\n                                                                                    });\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <i className=\"fa fa-check\" />\r\n                                                                            </Button>\r\n                                                                        </OverlayTrigger>\r\n                                                                        <OverlayTrigger\r\n                                                                            placement=\"right\"\r\n                                                                        // overlay={tooltip('Reject')}\r\n                                                                        >\r\n                                                                            <Button\r\n                                                                                simple\r\n                                                                                onClick={(e) => {\r\n                                                                                    this.setState({\r\n                                                                                        deleteMode: true,\r\n                                                                                        userId: x.id,\r\n                                                                                        userIndex: i,\r\n                                                                                        fullnames: x.get(\r\n                                                                                            'fullname'\r\n                                                                                        )\r\n                                                                                    });\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <i className=\"fa fa-close\" />\r\n                                                                            </Button>\r\n                                                                        </OverlayTrigger>\r\n                                                                    </div>\r\n                                                                }\r\n                                                            />\r\n                                                        </Col>\r\n                                                    ))\r\n                                                )}\r\n                                        </Row>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* </Col> */}\r\n                    {/* </Row> */}\r\n                </Container>\r\n\r\n                {/* <ModalHandler\r\n                    show={this.state.deleteMode}\r\n                    title=\"Reject confirmation\"\r\n                    handleHide={() => this.setState({ deleteMode: false })}\r\n                    handleSave={this.handleReject}\r\n                    loading={this.state.loading}\r\n                    body={'Reject request ' + this.state.fullnames + ' ?'}\r\n                />\r\n                <ModalHandler\r\n                    show={this.state.editMode}\r\n                    title=\"Approve confirmation\"\r\n                    handleSave={this.handleApprove}\r\n                    loading={this.state.loading}\r\n                    handleHide={() => this.setState({ editMode: false })}\r\n                    body={'Approve request ' + this.state.fullnames + ' ?'}\r\n                /> */}\r\n                {/* <Row>\r\n                    <Col md={12}>\r\n                        <Card\r\n                            title=\"Data Early\"\r\n                            content={\r\n                                <p>{leave.map((x, i) => (\r\n                                    <UserCard name={x.get('fullname')}></UserCard>\r\n                                ))}</p>\r\n                            }\r\n                        >\r\n\r\n                        </Card>\r\n                    </Col>\r\n                </Row> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewDetailEarly;"]},"metadata":{},"sourceType":"module"}