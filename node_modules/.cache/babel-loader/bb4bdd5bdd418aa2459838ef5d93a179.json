{"ast":null,"code":"var _jsxFileName = \"/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/Quiz.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionCounter: 0\n    };\n  }\n\n  componentDidMount() {// if (this.state.questionCounter >= 2) {\n    // \tthis.setState({ questionCounter: 0 });\n    // }\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    const myQuestions = [{\n      question: 'Who invented JavaScript?',\n      answers: {\n        a: 'Douglas Crockford',\n        b: 'Sheryl Sandberg',\n        c: 'Brendan Eich'\n      },\n      correctAnswer: 'c'\n    }, {\n      question: 'Which one of these is a JavaScript package manager?',\n      answers: {\n        a: 'Node.js',\n        b: 'TypeScript',\n        c: 'npm'\n      },\n      correctAnswer: 'c'\n    }, {\n      question: 'Which tool can you use to ensure code quality?',\n      answers: {\n        a: 'Angular',\n        b: 'jQuery',\n        c: 'RequireJS'\n      },\n      correctAnswer: 'c'\n    }];\n    let answerKey = [];\n\n    const getKey = () => {\n      myQuestions.map((type, i) => {\n        for (let p in type) {\n          answerKey.push(p);\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      as: \"legend\",\n      column: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }, \"Radios\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, myQuestions[this.state.questionCounter].question, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: myQuestions[this.state.questionCounter].answers.a,\n      name: \"formHorizontalRadios\",\n      id: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: myQuestions[this.state.questionCounter].answers.b,\n      name: \"formHorizontalRadios\",\n      id: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: myQuestions[this.state.questionCounter].answers.c,\n      name: \"formHorizontalRadios\",\n      id: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (this.state.questionCounter > 2) {\n          console.log(this.state.questionCounter);\n          this.setState({\n            questionCounter: 0\n          });\n        }\n\n        return this.setState(prevState => ({\n          questionCounter: prevState.questionCounter + 1\n        }));\n        console.log(this.state.questionCounter);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, \"Next\")) // <Form>\n    // \t{myQuestions.map(({ answers, question }, index) => {\n    // \t\treturn Object.keys(answers).map((key, i) => {\n    // \t\t\treturn (\n    // \t\t\t\t<div key={i} className=\"mb-3\">\n    // \t\t\t\t\t<Form.Group>\n    // \t\t\t\t\t\t<Col sm={10}>\n    // \t\t\t\t\t\t\t<Form.Check\n    // \t\t\t\t\t\t\t\tonClick={(e) => console.log(e.target.value)}\n    // \t\t\t\t\t\t\t\ttype=\"radio\"\n    // \t\t\t\t\t\t\t\tvalue={key}\n    // \t\t\t\t\t\t\t\tid={i}\n    // \t\t\t\t\t\t\t\tlabel={answers[key]}\n    // \t\t\t\t\t\t\t/>\n    // \t\t\t\t\t\t</Col>\n    // \t\t\t\t\t</Form.Group>\n    // \t\t\t\t</div>\n    // \t\t\t);\n    // \t\t});\n    // \t\t// Object.keys(answers).forEach((key, i) => {\n    // \t\t// \t<div className=\"mb-3\">\n    // \t\t// \t\t<Form.Check\n    // \t\t// \t\t\tonClick={(e) => console.log(e.target.value)}\n    // \t\t// \t\t\ttype=\"radio\"\n    // \t\t// \t\t\tvalue={key}\n    // \t\t// \t\t\tid={`default-radio`}\n    // \t\t// \t\t\tlabel={answers[key]}\n    // \t\t// \t\t/>\n    // \t\t// \t</div>;\n    // \t\t// });\n    // \t})}\n    // </Form>\n    ;\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/Quiz.jsx"],"names":["React","Component","Form","Col","Row","Quiz","constructor","props","state","questionCounter","componentDidMount","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","myQuestions","question","answers","a","b","c","correctAnswer","answerKey","getKey","map","type","i","p","push","console","log","setState","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\n\nclass Quiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tquestionCounter: 0\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\t// if (this.state.questionCounter >= 2) {\n\t\t// \tthis.setState({ questionCounter: 0 });\n\t\t// }\n\t}\n\tshuffle(array) {\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t}\n\trender() {\n\t\tconst myQuestions = [\n\t\t\t{\n\t\t\t\tquestion: 'Who invented JavaScript?',\n\t\t\t\tanswers: {\n\t\t\t\t\ta: 'Douglas Crockford',\n\t\t\t\t\tb: 'Sheryl Sandberg',\n\t\t\t\t\tc: 'Brendan Eich'\n\t\t\t\t},\n\t\t\t\tcorrectAnswer: 'c'\n\t\t\t},\n\t\t\t{\n\t\t\t\tquestion: 'Which one of these is a JavaScript package manager?',\n\t\t\t\tanswers: {\n\t\t\t\t\ta: 'Node.js',\n\t\t\t\t\tb: 'TypeScript',\n\t\t\t\t\tc: 'npm'\n\t\t\t\t},\n\t\t\t\tcorrectAnswer: 'c'\n\t\t\t},\n\t\t\t{\n\t\t\t\tquestion: 'Which tool can you use to ensure code quality?',\n\t\t\t\tanswers: {\n\t\t\t\t\ta: 'Angular',\n\t\t\t\t\tb: 'jQuery',\n\t\t\t\t\tc: 'RequireJS'\n\t\t\t\t},\n\t\t\t\tcorrectAnswer: 'c'\n\t\t\t}\n\t\t];\n\n\t\tlet answerKey = [];\n\n\t\tconst getKey = () => {\n\t\t\tmyQuestions.map((type, i) => {\n\t\t\t\tfor (let p in type) {\n\t\t\t\t\tanswerKey.push(p);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t<Form.Label as=\"legend\" column sm={2}>\n\t\t\t\t\t\tRadios\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Col sm={10}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{myQuestions[this.state.questionCounter].question}\n\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tlabel={myQuestions[this.state.questionCounter].answers.a}\n\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\tid={1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tlabel={myQuestions[this.state.questionCounter].answers.b}\n\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\tid={2}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tlabel={myQuestions[this.state.questionCounter].answers.c}\n\t\t\t\t\t\t\t\tname=\"formHorizontalRadios\"\n\t\t\t\t\t\t\t\tid={3}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (this.state.questionCounter > 2) {\n\t\t\t\t\t\t\tconsole.log(this.state.questionCounter);\n\t\t\t\t\t\t\tthis.setState({ questionCounter: 0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this.setState((prevState) => ({\n\t\t\t\t\t\t\tquestionCounter: prevState.questionCounter + 1\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tconsole.log(this.state.questionCounter);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t// <Form>\n\t\t\t// \t{myQuestions.map(({ answers, question }, index) => {\n\t\t\t// \t\treturn Object.keys(answers).map((key, i) => {\n\t\t\t// \t\t\treturn (\n\t\t\t// \t\t\t\t<div key={i} className=\"mb-3\">\n\t\t\t// \t\t\t\t\t<Form.Group>\n\t\t\t// \t\t\t\t\t\t<Col sm={10}>\n\t\t\t// \t\t\t\t\t\t\t<Form.Check\n\t\t\t// \t\t\t\t\t\t\t\tonClick={(e) => console.log(e.target.value)}\n\t\t\t// \t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t// \t\t\t\t\t\t\t\tvalue={key}\n\t\t\t// \t\t\t\t\t\t\t\tid={i}\n\t\t\t// \t\t\t\t\t\t\t\tlabel={answers[key]}\n\t\t\t// \t\t\t\t\t\t\t/>\n\t\t\t// \t\t\t\t\t\t</Col>\n\t\t\t// \t\t\t\t\t</Form.Group>\n\t\t\t// \t\t\t\t</div>\n\t\t\t// \t\t\t);\n\t\t\t// \t\t});\n\t\t\t// \t\t// Object.keys(answers).forEach((key, i) => {\n\t\t\t// \t\t// \t<div className=\"mb-3\">\n\t\t\t// \t\t// \t\t<Form.Check\n\t\t\t// \t\t// \t\t\tonClick={(e) => console.log(e.target.value)}\n\t\t\t// \t\t// \t\t\ttype=\"radio\"\n\t\t\t// \t\t// \t\t\tvalue={key}\n\t\t\t// \t\t// \t\t\tid={`default-radio`}\n\t\t\t// \t\t// \t\t\tlabel={answers[key]}\n\t\t\t// \t\t// \t\t/>\n\t\t\t// \t\t// \t</div>;\n\t\t\t// \t\t// });\n\t\t\t// \t})}\n\t\t\t// </Form>\n\t\t);\n\t}\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}