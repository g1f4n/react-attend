{"ast":null,"code":"var _jsxFileName = \"/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/QuizYoutube.jsx\";\nimport React from 'react';\nimport { quizData } from './quizData';\nimport '../assets/css/quiz.css';\n\nclass MainQuiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentQuestion: 0,\n      myAnswer: null,\n      options: [],\n      score: 0,\n      disabled: true,\n      isEnd: false,\n      answerKey: []\n    };\n\n    this.loadQuizData = () => {\n      // console.log(quizData[0].question)\n      this.setState(() => {\n        return {\n          questions: quizData[this.state.currentQuestion].question,\n          answer: quizData[this.state.currentQuestion].answer,\n          options: quizData[this.state.currentQuestion].options,\n          key: quizData[this.state.currentQuestion].key\n        };\n      });\n    };\n\n    this.nextQuestionHandler = () => {\n      // console.log('test')\n      const _this$state = this.state,\n            myAnswer = _this$state.myAnswer,\n            answer = _this$state.answer,\n            score = _this$state.score,\n            key = _this$state.key,\n            currentQuestion = _this$state.currentQuestion; // const answerKey = { ...this.state };\n      // answerKey[this.state.currentQuestion] = myAnswer;\n      // const newArr = [...this.state.myAnswer];\n      // newArr.splice(currentQuestion, 0);\n      // this.setState({answerKey: newArr});\n      // if (myAnswer === answer) {\n      // \tthis.setState({\n      // \t\tscore: score + 1\n      // \t});\n      // }\n\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      console.log(this.state.currentQuestion);\n      console.log(this.state.answerKey);\n    };\n\n    this.previousHandler = () => {\n      this.setState(prevState => {\n        return {\n          currentQuestion: this.state.currentQuestion - 1\n        };\n      });\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        myAnswer: answer,\n        disabled: false\n      });\n    };\n\n    this.finishHandler = () => {\n      if (this.state.currentQuestion === quizData.length - 1) {\n        this.setState({\n          isEnd: true\n        });\n      }\n\n      if (this.state.userAnswer === this.state.correctAnswer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuizData();\n    console.log(this.state.score);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentQuestion !== prevState.currentQuestion) {\n      this.setState(() => {\n        return {\n          disabled: true,\n          questions: quizData[this.state.currentQuestion].question,\n          options: quizData[this.state.currentQuestion].options,\n          answer: quizData[this.state.currentQuestion].answer\n        };\n      });\n    }\n  } //check answer\n\n\n  render() {\n    const _this$state2 = this.state,\n          options = _this$state2.options,\n          myAnswer = _this$state2.myAnswer,\n          currentQuestion = _this$state2.currentQuestion,\n          isEnd = _this$state2.isEnd;\n\n    if (isEnd) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }\n      }, \"Game Over your Final score is \", this.state.score, \" points \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }\n      }, \"The correct answer's for the questions was\", /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, quizData.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"ui floating message options\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, item.answer)))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }\n      }, this.state.questions, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }\n      }, \"Questions \".concat(currentQuestion, \"  out of \").concat(quizData.length - 1, \" remaining \")), options.map((option, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: option.id,\n        className: \"ui floating message options\\n         \".concat(myAnswer === option ? 'selected' : null, \"\\n         \"),\n        onClick: () => this.checkAnswer(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, option)), currentQuestion < quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        disabled: this.state.disabled,\n        onClick: () => this.nextQuestionHandler(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, \"Next\"), currentQuestion === quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        onClick: this.finishHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default MainQuiz;","map":{"version":3,"sources":["/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/QuizYoutube.jsx"],"names":["React","quizData","MainQuiz","Component","state","currentQuestion","myAnswer","options","score","disabled","isEnd","answerKey","loadQuizData","setState","questions","question","answer","key","nextQuestionHandler","console","log","previousHandler","prevState","checkAnswer","finishHandler","length","userAnswer","correctAnswer","componentDidMount","componentDidUpdate","prevProps","render","map","item","index","option","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { quizData } from './quizData';\nimport '../assets/css/quiz.css';\n\nclass MainQuiz extends React.Component {\n\tstate = {\n\t\tcurrentQuestion: 0,\n\t\tmyAnswer: null,\n\t\toptions: [],\n\t\tscore: 0,\n\t\tdisabled: true,\n\t\tisEnd: false,\n\t\tanswerKey: []\n\t};\n\n\tloadQuizData = () => {\n\t\t// console.log(quizData[0].question)\n\t\tthis.setState(() => {\n\t\t\treturn {\n\t\t\t\tquestions: quizData[this.state.currentQuestion].question,\n\t\t\t\tanswer: quizData[this.state.currentQuestion].answer,\n\t\t\t\toptions: quizData[this.state.currentQuestion].options,\n\t\t\t\tkey: quizData[this.state.currentQuestion].key\n\t\t\t};\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadQuizData();\n\t\tconsole.log(this.state.score);\n\t}\n\tnextQuestionHandler = () => {\n\t\t// console.log('test')\n\t\tconst { myAnswer, answer, score, key, currentQuestion } = this.state;\n\t\t// const answerKey = { ...this.state };\n\t\t// answerKey[this.state.currentQuestion] = myAnswer;\n\t\t// const newArr = [...this.state.myAnswer];\n\t\t// newArr.splice(currentQuestion, 0);\n\t\t// this.setState({answerKey: newArr});\n\n\t\t// if (myAnswer === answer) {\n\t\t// \tthis.setState({\n\t\t// \t\tscore: score + 1\n\t\t// \t});\n\t\t// }\n\n\t\tthis.setState({\n\t\t\tcurrentQuestion: this.state.currentQuestion + 1\n\t\t});\n\t\tconsole.log(this.state.currentQuestion);\n\t\tconsole.log(this.state.answerKey);\n\t};\n\n\tpreviousHandler = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tcurrentQuestion: this.state.currentQuestion - 1\n\t\t\t};\n\t\t});\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.currentQuestion !== prevState.currentQuestion) {\n\t\t\tthis.setState(() => {\n\t\t\t\treturn {\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tquestions: quizData[this.state.currentQuestion].question,\n\t\t\t\t\toptions: quizData[this.state.currentQuestion].options,\n\t\t\t\t\tanswer: quizData[this.state.currentQuestion].answer\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\t//check answer\n\tcheckAnswer = (answer) => {\n\t\tthis.setState({ myAnswer: answer, disabled: false });\n\t};\n\tfinishHandler = () => {\n\t\tif (this.state.currentQuestion === quizData.length - 1) {\n\t\t\tthis.setState({\n\t\t\t\tisEnd: true\n\t\t\t});\n\t\t}\n\t\tif (this.state.userAnswer === this.state.correctAnswer) {\n\t\t\tthis.setState({\n\t\t\t\tscore: this.state.score + 1\n\t\t\t});\n\t\t}\n\t};\n\trender() {\n\t\tconst { options, myAnswer, currentQuestion, isEnd } = this.state;\n\n\t\tif (isEnd) {\n\t\t\treturn (\n\t\t\t\t<div className=\"result\">\n\t\t\t\t\t<h3>Game Over your Final score is {this.state.score} points </h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe correct answer's for the questions was\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{quizData.map((item, index) => (\n\t\t\t\t\t\t\t\t<li className=\"ui floating message options\" key={index}>\n\t\t\t\t\t\t\t\t\t{item.answer}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>{this.state.questions} </h1>\n\t\t\t\t\t<span>{`Questions ${currentQuestion}  out of ${quizData.length -\n\t\t\t\t\t\t1} remaining `}</span>\n\t\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tkey={option.id}\n\t\t\t\t\t\t\tclassName={`ui floating message options\n         ${myAnswer === option ? 'selected' : null}\n         `}\n\t\t\t\t\t\t\tonClick={() => this.checkAnswer(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t))}\n\t\t\t\t\t{currentQuestion < quizData.length - 1 && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"ui inverted button\"\n\t\t\t\t\t\t\tdisabled={this.state.disabled}\n\t\t\t\t\t\t\tonClick={() => this.nextQuestionHandler()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{/* //adding a finish button */}\n\t\t\t\t\t{currentQuestion === quizData.length - 1 && (\n\t\t\t\t\t\t<button className=\"ui inverted button\" onClick={this.finishHandler}>\n\t\t\t\t\t\t\tFinish\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default MainQuiz;\n"]},"metadata":{},"sourceType":"module"}