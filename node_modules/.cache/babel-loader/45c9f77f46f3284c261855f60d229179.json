{"ast":null,"code":"var _jsxFileName = \"/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/QuizYoutube.jsx\";\nimport React from 'react';\nimport { quizData } from './quizData';\nimport '../assets/css/quiz.css';\nimport Axios from 'axios';\n\nclass MainQuiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentQuestion: 0,\n      myAnswer: null,\n      options: [],\n      score: 0,\n      disabled: true,\n      isEnd: false,\n      answerKey: [],\n      correctAnswer: ['New Delhi', 'Elon Musk', 'Jeff Bezo', 'River Nile']\n    };\n\n    this.loadQuizData = () => {\n      // console.log(quizData[0].question)\n      this.setState(() => {\n        return {\n          questions: quizData[this.state.currentQuestion].question,\n          answer: quizData[this.state.currentQuestion].answer,\n          options: quizData[this.state.currentQuestion].options,\n          key: quizData[this.state.currentQuestion].key\n        };\n      });\n    };\n\n    this.nextQuestionHandler = () => {\n      // console.log('test')\n      const _this$state = this.state,\n            myAnswer = _this$state.myAnswer,\n            answer = _this$state.answer,\n            score = _this$state.score,\n            key = _this$state.key,\n            currentQuestion = _this$state.currentQuestion; // const answerKey = { ...this.state };\n      // answerKey[this.state.currentQuestion] = myAnswer;\n      // const newArr = [...this.state.myAnswer];\n      // newArr.splice(currentQuestion, 0);\n      // this.setState({answerKey: newArr});\n      // this.setState({ answerKey: this.state.answerKey.concat(myAnswer) }, () =>\n      // \tconsole.log(answerKey)\n      // );\n\n      this.setState(prevState => {\n        return {\n          answerKey: prevState.answerKey.concat(myAnswer)\n        };\n      }, () => console.log(this.state.answerKey));\n\n      if (myAnswer === answer) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      console.log(this.state.currentQuestion); // console.log(this.state.answerKey);\n    };\n\n    this.previousHandler = () => {\n      this.setState(prevState => {\n        return {\n          currentQuestion: this.state.currentQuestion - 1\n        };\n      });\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        myAnswer: answer,\n        disabled: false\n      });\n      console.log(this.state.myAnswer);\n    };\n\n    this.finishHandler = () => {\n      console.log(this.state.answerKey);\n\n      if (this.state.currentQuestion === quizData.length - 1) {\n        this.setState({\n          isEnd: true\n        });\n      }\n\n      if (this.state.myAnswer === this.state.answer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      const data = {\n        option: this.state.answerKey\n      };\n      Axios.post('http://localhost:5000/api/quiz/add', data).then(x => console.log(x.data.message)).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuizData();\n    console.log(this.state.score);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentQuestion !== prevState.currentQuestion) {\n      this.setState(() => {\n        return {\n          disabled: true,\n          questions: quizData[this.state.currentQuestion].question,\n          options: quizData[this.state.currentQuestion].options,\n          answer: quizData[this.state.currentQuestion].answer\n        };\n      });\n    }\n  } //check answer\n\n\n  render() {\n    const _this$state2 = this.state,\n          options = _this$state2.options,\n          myAnswer = _this$state2.myAnswer,\n          currentQuestion = _this$state2.currentQuestion,\n          isEnd = _this$state2.isEnd;\n\n    if (isEnd) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }\n      }, \"Game Over your Final score is \", this.state.score, \" points \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }\n      }, \"The correct answer's for the questions was\", /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, quizData.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"ui floating message options\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, item.answer)))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }\n      }, this.state.questions, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }\n      }, \"Questions \".concat(currentQuestion, \"  out of \").concat(quizData.length - 1, \" remaining \")), options.map((option, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: option.id,\n        className: \"ui floating message options\\n         \".concat(myAnswer === option ? 'selected' : null, \"\\n         \"),\n        onClick: () => this.checkAnswer(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, option)), currentQuestion < quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        disabled: this.state.disabled,\n        onClick: this.nextQuestionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, \"Next\"), currentQuestion === quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        onClick: this.finishHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default MainQuiz;","map":{"version":3,"sources":["/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/QuizYoutube.jsx"],"names":["React","quizData","Axios","MainQuiz","Component","state","currentQuestion","myAnswer","options","score","disabled","isEnd","answerKey","correctAnswer","loadQuizData","setState","questions","question","answer","key","nextQuestionHandler","prevState","concat","console","log","previousHandler","checkAnswer","finishHandler","length","data","option","post","then","x","message","catch","err","componentDidMount","componentDidUpdate","prevProps","render","map","item","index","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { quizData } from './quizData';\nimport '../assets/css/quiz.css';\nimport Axios from 'axios';\n\nclass MainQuiz extends React.Component {\n\tstate = {\n\t\tcurrentQuestion: 0,\n\t\tmyAnswer: null,\n\t\toptions: [],\n\t\tscore: 0,\n\t\tdisabled: true,\n\t\tisEnd: false,\n\t\tanswerKey: [],\n\t\tcorrectAnswer: [ 'New Delhi', 'Elon Musk', 'Jeff Bezo', 'River Nile' ]\n\t};\n\n\tloadQuizData = () => {\n\t\t// console.log(quizData[0].question)\n\t\tthis.setState(() => {\n\t\t\treturn {\n\t\t\t\tquestions: quizData[this.state.currentQuestion].question,\n\t\t\t\tanswer: quizData[this.state.currentQuestion].answer,\n\t\t\t\toptions: quizData[this.state.currentQuestion].options,\n\t\t\t\tkey: quizData[this.state.currentQuestion].key\n\t\t\t};\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadQuizData();\n\t\tconsole.log(this.state.score);\n\t}\n\tnextQuestionHandler = () => {\n\t\t// console.log('test')\n\t\tconst { myAnswer, answer, score, key, currentQuestion } = this.state;\n\t\t// const answerKey = { ...this.state };\n\t\t// answerKey[this.state.currentQuestion] = myAnswer;\n\t\t// const newArr = [...this.state.myAnswer];\n\t\t// newArr.splice(currentQuestion, 0);\n\t\t// this.setState({answerKey: newArr});\n\t\t// this.setState({ answerKey: this.state.answerKey.concat(myAnswer) }, () =>\n\t\t// \tconsole.log(answerKey)\n\t\t// );\n\n\t\tthis.setState(\n\t\t\t(prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\tanswerKey: prevState.answerKey.concat(myAnswer)\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => console.log(this.state.answerKey)\n\t\t);\n\n\t\tif (myAnswer === answer) {\n\t\t\tthis.setState({\n\t\t\t\tscore: score + 1\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentQuestion: this.state.currentQuestion + 1\n\t\t});\n\t\tconsole.log(this.state.currentQuestion);\n\t\t// console.log(this.state.answerKey);\n\t};\n\n\tpreviousHandler = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tcurrentQuestion: this.state.currentQuestion - 1\n\t\t\t};\n\t\t});\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.currentQuestion !== prevState.currentQuestion) {\n\t\t\tthis.setState(() => {\n\t\t\t\treturn {\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tquestions: quizData[this.state.currentQuestion].question,\n\t\t\t\t\toptions: quizData[this.state.currentQuestion].options,\n\t\t\t\t\tanswer: quizData[this.state.currentQuestion].answer\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\t//check answer\n\tcheckAnswer = (answer) => {\n\t\tthis.setState({ myAnswer: answer, disabled: false });\n\t\tconsole.log(this.state.myAnswer);\n\t};\n\tfinishHandler = () => {\n\t\tconsole.log(this.state.answerKey);\n\t\tif (this.state.currentQuestion === quizData.length - 1) {\n\t\t\tthis.setState({\n\t\t\t\tisEnd: true\n\t\t\t});\n\t\t}\n\t\tif (this.state.myAnswer === this.state.answer) {\n\t\t\tthis.setState({\n\t\t\t\tscore: this.state.score + 1\n\t\t\t});\n\t\t}\n\t\tconst data = {\n\t\t\toption: this.state.answerKey\n\t\t};\n\t\tAxios.post('http://localhost:5000/api/quiz/add', data)\n\t\t\t.then((x) => console.log(x.data.message))\n\t\t\t.catch((err) => console.log(err));\n\t};\n\trender() {\n\t\tconst { options, myAnswer, currentQuestion, isEnd } = this.state;\n\n\t\tif (isEnd) {\n\t\t\treturn (\n\t\t\t\t<div className=\"result\">\n\t\t\t\t\t<h3>Game Over your Final score is {this.state.score} points </h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe correct answer's for the questions was\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{quizData.map((item, index) => (\n\t\t\t\t\t\t\t\t<li className=\"ui floating message options\" key={index}>\n\t\t\t\t\t\t\t\t\t{item.answer}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>{this.state.questions} </h1>\n\t\t\t\t\t<span>{`Questions ${currentQuestion}  out of ${quizData.length -\n\t\t\t\t\t\t1} remaining `}</span>\n\t\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tkey={option.id}\n\t\t\t\t\t\t\tclassName={`ui floating message options\n         ${myAnswer === option ? 'selected' : null}\n         `}\n\t\t\t\t\t\t\tonClick={() => this.checkAnswer(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t))}\n\t\t\t\t\t{currentQuestion < quizData.length - 1 && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"ui inverted button\"\n\t\t\t\t\t\t\tdisabled={this.state.disabled}\n\t\t\t\t\t\t\tonClick={this.nextQuestionHandler}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{/* //adding a finish button */}\n\t\t\t\t\t{currentQuestion === quizData.length - 1 && (\n\t\t\t\t\t\t<button className=\"ui inverted button\" onClick={this.finishHandler}>\n\t\t\t\t\t\t\tFinish\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default MainQuiz;\n"]},"metadata":{},"sourceType":"module"}