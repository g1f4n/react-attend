{"ast":null,"code":"var _jsxFileName = \"/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/QuizYoutube.jsx\";\nimport React from 'react';\nimport { quizData } from './quizData'; // import '../assets/css/quiz.css';\n\nimport Axios from 'axios';\n\nclass MainQuiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentQuestion: 0,\n      myAnswer: null,\n      options: [],\n      score: 0,\n      disabled: true,\n      isEnd: false,\n      answerKey: [],\n      scorex: 0,\n      correctAnswer: ['New Delhi', 'Elon Musk', 'Jeff Bezo', 'River Nile']\n    };\n\n    this.loadQuizData = () => {\n      // console.log(quizData[0].question)\n      this.setState(() => {\n        return {\n          questions: quizData[this.state.currentQuestion].question,\n          answer: quizData[this.state.currentQuestion].answer,\n          options: quizData[this.state.currentQuestion].options,\n          key: quizData[this.state.currentQuestion].key\n        };\n      });\n    };\n\n    this.nextQuestionHandler = xc => {\n      // console.log('test')\n      const _this$state = this.state,\n            myAnswer = _this$state.myAnswer,\n            answer = _this$state.answer,\n            score = _this$state.score,\n            key = _this$state.key,\n            currentQuestion = _this$state.currentQuestion; // const answerKey = { ...this.state };\n      // answerKey[this.state.currentQuestion] = myAnswer;\n      // const newArr = [...this.state.myAnswer];\n      // newArr.splice(currentQuestion, 0);\n      // this.setState({answerKey: newArr});\n      // this.setState({ answerKey: this.state.answerKey.concat(myAnswer) }, () =>\n      // \tconsole.log(answerKey)\n      // );\n      // this.setState(\n      // \t(prevState) => {\n      // \t\treturn {\n      // \t\t\tanswerKey: prevState.answerKey.concat(xc)\n      // \t\t};\n      // \t},\n      // \t() => console.log(this.state.answerKey)\n      // );\n\n      this.state.answerKey.splice(currentQuestion, 1, xc);\n      console.log('update', this.state.answerKey);\n\n      if (myAnswer === answer) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      console.log(this.state.currentQuestion); // console.log(this.state.answerKey);\n    };\n\n    this.previousHandler = () => {\n      //this.state.answerKey.splice(this.state.currentQuestion, 0, xc);\n      this.setState(prevState => {\n        return {\n          currentQuestion: prevState.currentQuestion - 1\n        };\n      });\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        myAnswer: answer,\n        disabled: false\n      });\n      console.log(this.state.myAnswer);\n    };\n\n    this.totalScore = () => {\n      let scorez = 0;\n      this.state.answerKey.map((x, i) => {\n        if (x === this.state.correctAnswer[i]) {\n          scorez += 10; // this.setState(\n          // \t(prev) => {\n          // \t\treturn {\n          // \t\t\tscorex: prev.scorex + 10\n          // \t\t};\n          // \t},\n          // \t() => console.log(this.state.scorex)\n          // );\n        } else {\n          scorez += 0; // this.setState((prev) => {\n          // \treturn { scorex: prev.scorex + 0 };\n          // });\n        }\n      });\n      this.setState({\n        scorex: scorez\n      }, () => console.log(this.state.scorex));\n    };\n\n    this.finishHandler = xc => {\n      this.state.answerKey.push(this.state.myAnswer);\n      console.log(this.state.answerKey);\n\n      if (this.state.currentQuestion === quizData.length - 1) {\n        this.setState({\n          isEnd: true\n        });\n      }\n\n      if (this.state.myAnswer === this.state.answer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      this.totalScore();\n      const data = {\n        option: this.state.answerKey\n      };\n      Axios.post('http://localhost:5000/api/quiz/add', data).then(x => console.log(x.data.message)).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuizData();\n    console.log(this.state.score);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentQuestion !== prevState.currentQuestion) {\n      this.setState(() => {\n        return {\n          disabled: true,\n          questions: quizData[this.state.currentQuestion].question,\n          options: quizData[this.state.currentQuestion].options,\n          answer: quizData[this.state.currentQuestion].answer\n        };\n      });\n    }\n  } //check answer\n\n\n  render() {\n    const _this$state2 = this.state,\n          options = _this$state2.options,\n          myAnswer = _this$state2.myAnswer,\n          currentQuestion = _this$state2.currentQuestion,\n          isEnd = _this$state2.isEnd;\n\n    if (isEnd) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }\n      }, \"Game Over your Final score is \", this.state.score, \" points \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }\n      }, \"The correct answer's for the questions was\", /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, quizData.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        className: \"ui floating message options\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, item.answer)))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }\n      }, this.state.questions, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }\n      }, \"Questions \".concat(currentQuestion, \"  out of \").concat(quizData.length - 1, \" remaining \")), options.map((option, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: option.id,\n        className: \"ui floating message options\\n         \".concat(myAnswer === option ? 'selected' : null, \"\\n         \"),\n        onClick: () => this.checkAnswer(option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, option)), currentQuestion > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        disabled: this.state.disabled,\n        onClick: () => this.previousHandler(this.state.myAnswer),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, \"Previous\"), currentQuestion < quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        disabled: this.state.disabled,\n        onClick: () => this.nextQuestionHandler(this.state.myAnswer),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, \"Next\"), currentQuestion === quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        onClick: () => this.finishHandler(this.state.answerKey),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default MainQuiz;","map":{"version":3,"sources":["/home/pieroashady/VSCode/ReactProjects/txa/client/src/views/QuizYoutube.jsx"],"names":["React","quizData","Axios","MainQuiz","Component","state","currentQuestion","myAnswer","options","score","disabled","isEnd","answerKey","scorex","correctAnswer","loadQuizData","setState","questions","question","answer","key","nextQuestionHandler","xc","splice","console","log","previousHandler","prevState","checkAnswer","totalScore","scorez","map","x","i","finishHandler","push","length","data","option","post","then","message","catch","err","componentDidMount","componentDidUpdate","prevProps","render","item","index","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { quizData } from './quizData';\n// import '../assets/css/quiz.css';\nimport Axios from 'axios';\n\nclass MainQuiz extends React.Component {\n\tstate = {\n\t\tcurrentQuestion: 0,\n\t\tmyAnswer: null,\n\t\toptions: [],\n\t\tscore: 0,\n\t\tdisabled: true,\n\t\tisEnd: false,\n\t\tanswerKey: [],\n\t\tscorex: 0,\n\t\tcorrectAnswer: [ 'New Delhi', 'Elon Musk', 'Jeff Bezo', 'River Nile' ]\n\t};\n\n\tloadQuizData = () => {\n\t\t// console.log(quizData[0].question)\n\t\tthis.setState(() => {\n\t\t\treturn {\n\t\t\t\tquestions: quizData[this.state.currentQuestion].question,\n\t\t\t\tanswer: quizData[this.state.currentQuestion].answer,\n\t\t\t\toptions: quizData[this.state.currentQuestion].options,\n\t\t\t\tkey: quizData[this.state.currentQuestion].key\n\t\t\t};\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadQuizData();\n\t\tconsole.log(this.state.score);\n\t}\n\tnextQuestionHandler = (xc) => {\n\t\t// console.log('test')\n\t\tconst { myAnswer, answer, score, key, currentQuestion } = this.state;\n\t\t// const answerKey = { ...this.state };\n\t\t// answerKey[this.state.currentQuestion] = myAnswer;\n\t\t// const newArr = [...this.state.myAnswer];\n\t\t// newArr.splice(currentQuestion, 0);\n\t\t// this.setState({answerKey: newArr});\n\t\t// this.setState({ answerKey: this.state.answerKey.concat(myAnswer) }, () =>\n\t\t// \tconsole.log(answerKey)\n\t\t// );\n\n\t\t// this.setState(\n\t\t// \t(prevState) => {\n\t\t// \t\treturn {\n\t\t// \t\t\tanswerKey: prevState.answerKey.concat(xc)\n\t\t// \t\t};\n\t\t// \t},\n\t\t// \t() => console.log(this.state.answerKey)\n\t\t// );\n\t\tthis.state.answerKey.splice(currentQuestion, 1, xc);\n\t\tconsole.log('update', this.state.answerKey);\n\n\t\tif (myAnswer === answer) {\n\t\t\tthis.setState({\n\t\t\t\tscore: score + 1\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentQuestion: this.state.currentQuestion + 1\n\t\t});\n\t\tconsole.log(this.state.currentQuestion);\n\t\t// console.log(this.state.answerKey);\n\t};\n\n\tpreviousHandler = () => {\n\t\t//this.state.answerKey.splice(this.state.currentQuestion, 0, xc);\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tcurrentQuestion: prevState.currentQuestion - 1\n\t\t\t};\n\t\t});\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.currentQuestion !== prevState.currentQuestion) {\n\t\t\tthis.setState(() => {\n\t\t\t\treturn {\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tquestions: quizData[this.state.currentQuestion].question,\n\t\t\t\t\toptions: quizData[this.state.currentQuestion].options,\n\t\t\t\t\tanswer: quizData[this.state.currentQuestion].answer\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\t//check answer\n\tcheckAnswer = (answer) => {\n\t\tthis.setState({ myAnswer: answer, disabled: false });\n\t\tconsole.log(this.state.myAnswer);\n\t};\n\n\ttotalScore = () => {\n\t\tlet scorez = 0;\n\t\tthis.state.answerKey.map((x, i) => {\n\t\t\tif (x === this.state.correctAnswer[i]) {\n\t\t\t\tscorez += 10;\n\t\t\t\t// this.setState(\n\t\t\t\t// \t(prev) => {\n\t\t\t\t// \t\treturn {\n\t\t\t\t// \t\t\tscorex: prev.scorex + 10\n\t\t\t\t// \t\t};\n\t\t\t\t// \t},\n\t\t\t\t// \t() => console.log(this.state.scorex)\n\t\t\t\t// );\n\t\t\t} else {\n\t\t\t\tscorez += 0;\n\t\t\t\t// this.setState((prev) => {\n\t\t\t\t// \treturn { scorex: prev.scorex + 0 };\n\t\t\t\t// });\n\t\t\t}\n\t\t});\n\t\tthis.setState({ scorex: scorez }, () => console.log(this.state.scorex));\n\t};\n\n\tfinishHandler = (xc) => {\n\t\tthis.state.answerKey.push(this.state.myAnswer);\n\t\tconsole.log(this.state.answerKey);\n\t\tif (this.state.currentQuestion === quizData.length - 1) {\n\t\t\tthis.setState({\n\t\t\t\tisEnd: true\n\t\t\t});\n\t\t}\n\t\tif (this.state.myAnswer === this.state.answer) {\n\t\t\tthis.setState({\n\t\t\t\tscore: this.state.score + 1\n\t\t\t});\n\t\t}\n\t\tthis.totalScore();\n\t\tconst data = {\n\t\t\toption: this.state.answerKey\n\t\t};\n\t\tAxios.post('http://localhost:5000/api/quiz/add', data)\n\t\t\t.then((x) => console.log(x.data.message))\n\t\t\t.catch((err) => console.log(err));\n\t};\n\trender() {\n\t\tconst { options, myAnswer, currentQuestion, isEnd } = this.state;\n\n\t\tif (isEnd) {\n\t\t\treturn (\n\t\t\t\t<div className=\"result\">\n\t\t\t\t\t<h3>Game Over your Final score is {this.state.score} points </h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe correct answer's for the questions was\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{quizData.map((item, index) => (\n\t\t\t\t\t\t\t\t<li className=\"ui floating message options\" key={index}>\n\t\t\t\t\t\t\t\t\t{item.answer}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>{this.state.questions} </h1>\n\t\t\t\t\t<span>{`Questions ${currentQuestion}  out of ${quizData.length -\n\t\t\t\t\t\t1} remaining `}</span>\n\t\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tkey={option.id}\n\t\t\t\t\t\t\tclassName={`ui floating message options\n         ${myAnswer === option ? 'selected' : null}\n         `}\n\t\t\t\t\t\t\tonClick={() => this.checkAnswer(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t))}\n\t\t\t\t\t{currentQuestion > 0 && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"ui inverted button\"\n\t\t\t\t\t\t\tdisabled={this.state.disabled}\n\t\t\t\t\t\t\tonClick={() => this.previousHandler(this.state.myAnswer)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPrevious\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{currentQuestion < quizData.length - 1 && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"ui inverted button\"\n\t\t\t\t\t\t\tdisabled={this.state.disabled}\n\t\t\t\t\t\t\tonClick={() => this.nextQuestionHandler(this.state.myAnswer)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{/* //adding a finish button */}\n\t\t\t\t\t{currentQuestion === quizData.length - 1 && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"ui inverted button\"\n\t\t\t\t\t\t\tonClick={() => this.finishHandler(this.state.answerKey)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFinish\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default MainQuiz;\n"]},"metadata":{},"sourceType":"module"}