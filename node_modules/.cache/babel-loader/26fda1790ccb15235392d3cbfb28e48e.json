{"ast":null,"code":"var _jsxFileName = \"E:\\\\Node.js Project\\\\project dika\\\\dika-attend\\\\react-attend\\\\src\\\\views\\\\Cuti.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, FormGroup, ControlLabel, FormControl, Form, Tooltip, OverlayTrigger, Table } from 'react-bootstrap';\nimport { Card } from 'components/Card/Card.jsx';\nimport { FormInputs } from 'components/FormInputs/FormInputs.jsx';\nimport { UserCard } from 'components/UserCard/UserCard.jsx';\nimport Button from 'components/CustomButton/CustomButton.jsx';\nimport avatar from 'assets/img/faces/face-3.jpg';\nimport Axios from 'axios';\nimport { baseurl } from 'utils/baseurl';\nimport Parse from 'parse';\nimport ModalHandler from './Category/ModalHandler';\nimport moment from 'moment';\nimport DateTime from 'react-datetime';\nimport { Link } from 'react-router-dom';\nimport { handleConvert } from 'utils/converter';\n\nclass Cuti extends Component {\n  constructor(props) {\n    super(props);\n\n    this.approveChecked = e => {\n      const checkId = this.state.checkId;\n      const checkIdLength = checkId.length;\n      const Izin = Parse.Object.extend('Izin');\n      const query = new Parse.Query(Izin);\n      let totalData = 0;\n      checkId.map(id => {\n        this.handleApproveAll(id); // console.log(id);\n        // //query.equalTo('objectId', id);\n        // query.get(id).then((x) => {\n        //     // x.set('status', 1);\n        //     // x.save().then((x) => {\n        //     //  console.log('success');\n        //     // });\n        //     console.log(x);\n        // });\n        // query\n        //  .get(id)\n        //  .then((x) => {\n        //      x.set('status', 1);\n        //      x\n        //          .save()\n        //          .then((x) => {\n        //              console.log('success');\n        //              totalData++;\n        //              if (totalData == checkIdLength) {\n        //                  console.log('stop');\n        //                  this.setState({ checkId: [] });\n        //              }\n        //          })\n        //          .catch((err) => this.setState({ error: err }));\n        //  })\n      });\n    };\n\n    this.rejectChecked = e => {\n      const checkId = this.state.checkId;\n      checkId.map(id => {\n        this.handleRejectAll(id);\n      });\n    };\n\n    this.state = {\n      trainee: [],\n      izin: [],\n      error: '',\n      userId: '',\n      status: 3,\n      userIndex: 0,\n      fullnames: '',\n      loading: false,\n      addMode: false,\n      editMode: false,\n      deleteMode: false,\n      buttonLoading: false,\n      checkAll: false,\n      checkId: [],\n      checkOne: false,\n      lampiran: '',\n      photoMode: false\n    };\n    this.handleApprove = this.handleApprove.bind(this);\n    this.handleReject = this.handleReject.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleAllCheck = this.handleAllCheck.bind(this);\n    this.handleChildCheck = this.handleChildCheck.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTrainee();\n  }\n\n  handleAllCheck(e) {\n    let izin = this.state.izin;\n    let collecId = [];\n    izin.map(x => {\n      x.isChecked = e.target.checked;\n\n      if (x.isChecked) {\n        collecId.push(x.id);\n      } else {\n        collecId = [];\n      }\n\n      return x;\n    });\n    this.setState({\n      izin: izin,\n      checkId: collecId\n    }, () => console.log(this.state.checkId));\n  }\n\n  handleChildCheck(e) {\n    let izin = this.state.izin;\n    const checkId = this.state.checkId;\n    let checked = e.target.value;\n    izin.map(x => {\n      console.log('bandingkan', x.id === e.target.value);\n\n      if (x.id === e.target.value) {\n        console.log('sama');\n        x.isChecked = e.target.checked;\n\n        if (x.isChecked) {\n          this.setState(prevState => ({\n            checkId: [...this.state.checkId, checked]\n          }), () => console.log(this.state.checkId));\n        } else {\n          const index = checkId.indexOf(checked);\n\n          if (index > -1) {\n            checkId.splice(index, 1);\n            this.setState(prevState => ({\n              checkId: checkId\n            }), () => console.log(this.state.checkId));\n          }\n        }\n      }\n    });\n    this.setState({\n      izin: izin\n    });\n  }\n\n  handleApprove(e) {\n    this.setState({\n      loading: true\n    });\n    const Izin = Parse.Object.extend('Izin');\n    const query = new Parse.Query(Izin);\n    query.get(this.state.userId).then(x => {\n      x.set('status', 1);\n      x.save().then(() => {\n        const newOvertime = [...this.state.izin];\n        newOvertime.splice(this.state.userIndex, 1);\n        this.setState({\n          izin: newOvertime,\n          editMode: false,\n          loading: false\n        });\n      });\n    });\n  }\n\n  handleApproveAll(e) {\n    this.setState({\n      loading: true\n    });\n    const Izin = Parse.Object.extend('Izin');\n    const query = new Parse.Query(Izin);\n    query.get(e).then(x => {\n      x.set('status', 1);\n      x.save().then(() => {\n        const newOvertime = [...this.state.izin];\n        newOvertime.splice(this.state.userIndex, 1);\n        this.setState({\n          izin: newOvertime,\n          editMode: false,\n          loading: false\n        });\n      });\n    });\n  }\n\n  handleReject(e) {\n    this.setState({\n      loading: false\n    });\n    const Izin = Parse.Object.extend('Izin');\n    const query = new Parse.Query(Izin);\n    query.get(this.state.userId).then(x => {\n      x.set('status', 0);\n      x.save().then(() => {\n        const newOvertime = [...this.state.izin];\n        newOvertime.splice(this.state.userIndex, 1);\n        this.setState({\n          izin: newOvertime,\n          deleteMode: false,\n          loading: false\n        });\n      });\n    });\n  }\n\n  handleRejectAll(e) {\n    this.setState({\n      loading: false\n    });\n    const Izin = Parse.Object.extend('Izin');\n    const query = new Parse.Query(Izin);\n    query.get(e).then(x => {\n      x.set('status', 0);\n      x.save().then(() => {\n        const newOvertime = [...this.state.izin];\n        newOvertime.splice(this.state.userIndex, 1);\n        this.setState({\n          izin: newOvertime,\n          deleteMode: false,\n          loading: false\n        });\n      });\n    });\n  }\n\n  getTrainee() {\n    this.setState({\n      loading: true\n    });\n    const Izin = Parse.Object.extend('Izin');\n    const Leader = Parse.Object.extend('Leader');\n    const leader = new Leader();\n    const query = new Parse.Query(Izin);\n    const d = new Date();\n    const start = new moment(d);\n    start.startOf('day');\n    const finish = new moment(start);\n    finish.add(1, 'day');\n    console.log('start', start.toDate());\n    console.log('finsih', finish.toDate());\n    console.log(Parse.User.current().get('leaderId').id);\n    leader.id = Parse.User.current().get('leaderId').id;\n    query.equalTo('leaderId', leader);\n    query.equalTo('status', 3);\n    query.equalTo('statusIzin', 2);\n    query.greaterThanOrEqualTo('createdAt', start.toDate());\n    query.lessThan('createdAt', finish.toDate());\n    query.find().then(x => {\n      console.log(x);\n      this.setState({\n        izin: x,\n        loading: false\n      });\n    });\n  }\n\n  handleFilter(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    console.log(this.state.status);\n    const Izin = Parse.Object.extend('Izin');\n    const Leader = Parse.Object.extend('Leader');\n    const leader = new Leader();\n    const query = new Parse.Query(Izin);\n    const d = new Date();\n    const start = new moment(d);\n    start.startOf('day');\n    const finish = new moment(start);\n    finish.add(1, 'day');\n    console.log(Parse.User.current().get('leaderId').id);\n    leader.id = Parse.User.current().get('leaderId').id;\n    query.equalTo('leaderId', leader);\n    query.equalTo('status', parseInt(this.state.status));\n    query.equalTo('statusIzin', 2);\n    query.greaterThanOrEqualTo('createdAt', start.toDate());\n    query.lessThan('createdAt', finish.toDate());\n    query.find().then(x => {\n      console.log(x);\n      this.setState({\n        izin: x,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          izin = _this$state.izin,\n          error = _this$state.error,\n          loading = _this$state.loading,\n          batch = _this$state.batch;\n    izin.map(x => console.log(x.get('alasanIzin')));\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConf = _this$state2.passwordConf,\n          dob = _this$state2.dob,\n          pob = _this$state2.pob,\n          phoneNumber = _this$state2.phoneNumber,\n          fullname = _this$state2.fullname,\n          profile = _this$state2.profile;\n\n    const tooltip = msg => /*#__PURE__*/React.createElement(Tooltip, {\n      id: \"button-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 34\n      }\n    }, msg);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHandler, {\n      show: this.state.deleteMode,\n      title: \"Reject confirmation\",\n      handleHide: () => this.setState({\n        deleteMode: false\n      }),\n      handleSave: this.handleReject,\n      loading: this.state.loading,\n      body: 'Reject request ' + this.state.fullnames + ' ?',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ModalHandler, {\n      show: this.state.editMode,\n      title: \"Approve confirmation\",\n      handleSave: this.handleApprove,\n      loading: this.state.loading,\n      handleHide: () => this.setState({\n        editMode: false\n      }),\n      body: 'Approve request ' + this.state.fullnames + ' ?',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ModalHandler, {\n      size: \"lg\",\n      show: this.state.photoMode,\n      title: \"Lampiran staff\" //handleSave={this.handleApprove}\n      ,\n      loading: this.state.loading,\n      saveText: \"Download\",\n      handleHide: () => this.setState({\n        photoMode: false\n      }),\n      body: /*#__PURE__*/React.createElement(\"img\", {\n        width: \"100%\",\n        height: 300,\n        src: this.state.lampiran,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Request cuti\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleFilter,\n        style: {\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 61\n        }\n      }, \"Search by approval\")), /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          span: 2\n        },\n        className: \"pull-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\" // defaultValue={1}\n        ,\n        onChange: e => {\n          console.log(e.target.value);\n          this.setState({\n            status: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 61\n        }\n      }, [3, 1, 0].map(x => /*#__PURE__*/React.createElement(\"option\", {\n        value: x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 69\n        }\n      }, handleConvert(x))))), /*#__PURE__*/React.createElement(Col, {\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disable: loading ? 'true' : 'false',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 65\n        }\n      }), ' ', loading ? 'Fetching...' : 'Search')))))), /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          span: 0\n        },\n        className: \"float-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disable: loading ? 'true' : 'false',\n        className: \"mr-2 m-1\",\n        onClick: this.approveChecked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 49\n        }\n      }), ' ', loading ? 'Fetching...' : 'Approve'), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"m-1\",\n        disable: loading ? 'true' : 'false',\n        onClick: this.rejectChecked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 49\n        }\n      }), ' ', loading ? 'Fetching...' : 'Reject')), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 41\n        }\n      }, izin.length < 1 ? /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 49\n        }\n      }, \"No data found...\") : /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        onClick: this.handleAllCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 73\n        }\n      })), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 69\n        }\n      }, \"NAME\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 69\n        }\n      }, \"DESKRIPSI IZIN\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 69\n        }\n      }, \"ALASAN IZIN\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 69\n        }\n      }, \"DARI\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 69\n        }\n      }, \"SAMPAI\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 69\n        }\n      }, \"ACTION\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        key: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 61\n        }\n      }, izin.map((prop, key) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        value: prop.id,\n        checked: prop.isChecked,\n        onChange: this.handleChildCheck // onChange={(e) => {\n        //  const checked =\n        //      e.target.checked;\n        // }}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 77\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 73\n        }\n      }, prop.get('fullname')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 73\n        }\n      }, prop.get('descIzin')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 73\n        }\n      }, prop.get('alasanIzin')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 73\n        }\n      }, moment(prop.get('dari')).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 73\n        }\n      }, moment(prop.get('sampai')).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 73\n        }\n      }, prop.attributes.attachFile == undefined ? '' : /*#__PURE__*/React.createElement(OverlayTrigger, {\n        placement: \"right\",\n        overlay: tooltip('Approve'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-circle btn-warning mr-2\",\n        onClick: () => {\n          this.setState({\n            editMode: true,\n            userId: prop.id,\n            userIndex: key,\n            fullnames: prop.get('fullname')\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 93\n        }\n      }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n        placement: \"right\",\n        overlay: tooltip('Lampiran'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-circle btn-warning mr-2\",\n        onClick: () => {\n          this.setState({\n            editMode: true,\n            userId: prop.id,\n            userIndex: key,\n            fullnames: prop.get('fullname')\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 85\n        }\n      }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n        placement: \"right\",\n        overlay: tooltip('Reject'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-circle btn-danger\",\n        onClick: e => {\n          this.setState({\n            deleteMode: true,\n            userId: prop.id,\n            userIndex: key,\n            fullnames: prop.get('fullname')\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 85\n        }\n      }))))))))) // <Col md={3}>\n      //  <UserCard\n      //      out={x.status}\n      //      bgImage={\n      //          <img\n      //              src=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\n      //              alt=\"...\"\n      //          />\n      //      }\n      //      avatar={\n      //          x.attributes.attachFile ==\n      //          undefined ? (\n      //              'https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400'\n      //          ) : (\n      //              x.attributes.attachFile.url()\n      //          )\n      //      }\n      //      name={x\n      //          .get('fullname')\n      //          .split(' ')\n      //          .slice(0, 2)\n      //          .join(' ')}\n      //      userName={x.get('descIzin')}\n      //      description={\n      //          <span>\n      //              <strong>Alasan</strong>\n      //              <br />\n      //              {x.get('alasanIzin') !== '-' ||\n      //              x.get('alasanIzin') ===\n      //                  undefined ? (\n      //                  x.get('alasanIzin')\n      //              ) : (\n      //                  'Surat terlampir'\n      //              )}\n      //              {/* <br />\n      //              {x.dateOfBirth}\n      //              <br />\n      //              {x.phoneNumber} */}\n      //          </span>\n      //      }\n      //      status={x.get('status')}\n      //      socials={\n      //          <div>\n      //              <OverlayTrigger\n      //                  placement=\"right\"\n      //                  overlay={tooltip('Approve')}\n      //              >\n      //                  <Button\n      //                      simple\n      //                      onClick={() => {\n      //                          this.setState({\n      //                              editMode: true,\n      //                              userId: x.id,\n      //                              userIndex: i,\n      //                              fullnames: x.get(\n      //                                  'fullname'\n      //                              )\n      //                          });\n      //                      }}\n      //                  >\n      //                      <i className=\"fa fa-check\" />\n      //                  </Button>\n      //              </OverlayTrigger>\n      //              <OverlayTrigger\n      //                  placement=\"right\"\n      //                  overlay={tooltip('Reject')}\n      //              >\n      //                  <Button\n      //                      simple\n      //                      onClick={(e) => {\n      //                          this.setState({\n      //                              deleteMode: true,\n      //                              userId: x.id,\n      //                              userIndex: i,\n      //                              fullnames: x.get(\n      //                                  'fullname'\n      //                              )\n      //                          });\n      //                      }}\n      //                  >\n      //                      <i className=\"fa fa-close\" />\n      //                  </Button>\n      //              </OverlayTrigger>\n      //          </div>\n      //      }\n      //  />\n      // </Col>\n      )),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default Cuti;","map":{"version":3,"sources":["E:/Node.js Project/project dika/dika-attend/react-attend/src/views/Cuti.jsx"],"names":["React","Component","Container","Row","Col","FormGroup","ControlLabel","FormControl","Form","Tooltip","OverlayTrigger","Table","Card","FormInputs","UserCard","Button","avatar","Axios","baseurl","Parse","ModalHandler","moment","DateTime","Link","handleConvert","Cuti","constructor","props","approveChecked","e","checkId","state","checkIdLength","length","Izin","Object","extend","query","Query","totalData","map","id","handleApproveAll","rejectChecked","handleRejectAll","trainee","izin","error","userId","status","userIndex","fullnames","loading","addMode","editMode","deleteMode","buttonLoading","checkAll","checkOne","lampiran","photoMode","handleApprove","bind","handleReject","handleFilter","handleAllCheck","handleChildCheck","componentDidMount","getTrainee","collecId","x","isChecked","target","checked","push","setState","console","log","value","prevState","index","indexOf","splice","get","then","set","save","newOvertime","Leader","leader","d","Date","start","startOf","finish","add","toDate","User","current","equalTo","greaterThanOrEqualTo","lessThan","find","preventDefault","parseInt","render","batch","username","email","password","passwordConf","dob","pob","phoneNumber","fullname","profile","tooltip","msg","marginBottom","span","prop","key","format","attributes","attachFile","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,SADJ,EAEIC,GAFJ,EAGIC,GAHJ,EAIIC,SAJJ,EAKIC,YALJ,EAMIC,WANJ,EAOIC,IAPJ,EAQIC,OARJ,EASIC,cATJ,EAUIC,KAVJ,QAWO,iBAXP;AAaA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,MAAMC,IAAN,SAAmBxB,SAAnB,CAA6B;AACzByB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqFnBC,cArFmB,GAqFDC,CAAD,IAAO;AAAA,YACZC,OADY,GACA,KAAKC,KADL,CACZD,OADY;AAEpB,YAAME,aAAa,GAAGF,OAAO,CAACG,MAA9B;AACA,YAAMC,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,YAAMC,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AACA,UAAIK,SAAS,GAAG,CAAhB;AAEAT,MAAAA,OAAO,CAACU,GAAR,CAAaC,EAAD,IAAQ;AAChB,aAAKC,gBAAL,CAAsBD,EAAtB,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OA3BD;AA4BH,KAxHkB;;AAAA,SA0HnBE,aA1HmB,GA0HFd,CAAD,IAAO;AAAA,YACXC,OADW,GACC,KAAKC,KADN,CACXD,OADW;AAGnBA,MAAAA,OAAO,CAACU,GAAR,CAAaC,EAAD,IAAQ;AAChB,aAAKG,eAAL,CAAqBH,EAArB;AACH,OAFD;AAGH,KAhIkB;;AAEf,SAAKV,KAAL,GAAa;AACTc,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,MAAM,EAAE,EAJC;AAKTC,MAAAA,MAAM,EAAE,CALC;AAMTC,MAAAA,SAAS,EAAE,CANF;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTC,MAAAA,OAAO,EAAE,KARA;AASTC,MAAAA,OAAO,EAAE,KATA;AAUTC,MAAAA,QAAQ,EAAE,KAVD;AAWTC,MAAAA,UAAU,EAAE,KAXH;AAYTC,MAAAA,aAAa,EAAE,KAZN;AAaTC,MAAAA,QAAQ,EAAE,KAbD;AAcT3B,MAAAA,OAAO,EAAE,EAdA;AAeT4B,MAAAA,QAAQ,EAAE,KAfD;AAgBTC,MAAAA,QAAQ,EAAE,EAhBD;AAiBTC,MAAAA,SAAS,EAAE;AAjBF,KAAb;AAoBA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDH,EAAAA,cAAc,CAACpC,CAAD,EAAI;AACd,QAAIiB,IAAI,GAAG,KAAKf,KAAL,CAAWe,IAAtB;AACA,QAAIuB,QAAQ,GAAG,EAAf;AAEAvB,IAAAA,IAAI,CAACN,GAAL,CAAU8B,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,SAAF,GAAc1C,CAAC,CAAC2C,MAAF,CAASC,OAAvB;;AACA,UAAIH,CAAC,CAACC,SAAN,EAAiB;AACbF,QAAAA,QAAQ,CAACK,IAAT,CAAcJ,CAAC,CAAC7B,EAAhB;AACH,OAFD,MAEO;AACH4B,QAAAA,QAAQ,GAAG,EAAX;AACH;;AAED,aAAOC,CAAP;AACH,KATD;AAWA,SAAKK,QAAL,CAAc;AAAE7B,MAAAA,IAAI,EAAEA,IAAR;AAAchB,MAAAA,OAAO,EAAEuC;AAAvB,KAAd,EAAiD,MAAMO,OAAO,CAACC,GAAR,CAAY,KAAK9C,KAAL,CAAWD,OAAvB,CAAvD;AACH;;AAEDoC,EAAAA,gBAAgB,CAACrC,CAAD,EAAI;AAAA,QACViB,IADU,GACD,KAAKf,KADJ,CACVe,IADU;AAAA,UAERhB,OAFQ,GAEI,KAAKC,KAFT,CAERD,OAFQ;AAGhB,QAAI2C,OAAO,GAAG5C,CAAC,CAAC2C,MAAF,CAASM,KAAvB;AACAhC,IAAAA,IAAI,CAACN,GAAL,CAAU8B,CAAD,IAAO;AACZM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,CAAC,CAAC7B,EAAF,KAASZ,CAAC,CAAC2C,MAAF,CAASM,KAA5C;;AACA,UAAIR,CAAC,CAAC7B,EAAF,KAASZ,CAAC,CAAC2C,MAAF,CAASM,KAAtB,EAA6B;AACzBF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAP,QAAAA,CAAC,CAACC,SAAF,GAAc1C,CAAC,CAAC2C,MAAF,CAASC,OAAvB;;AACA,YAAIH,CAAC,CAACC,SAAN,EAAiB;AACb,eAAKI,QAAL,CACKI,SAAD,KAAgB;AACZjD,YAAAA,OAAO,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,OAAf,EAAwB2C,OAAxB;AADG,WAAhB,CADJ,EAII,MAAMG,OAAO,CAACC,GAAR,CAAY,KAAK9C,KAAL,CAAWD,OAAvB,CAJV;AAMH,SAPD,MAOO;AACH,gBAAMkD,KAAK,GAAGlD,OAAO,CAACmD,OAAR,CAAgBR,OAAhB,CAAd;;AACA,cAAIO,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZlD,YAAAA,OAAO,CAACoD,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AACA,iBAAKL,QAAL,CACKI,SAAD,KAAgB;AACZjD,cAAAA,OAAO,EAAEA;AADG,aAAhB,CADJ,EAII,MAAM8C,OAAO,CAACC,GAAR,CAAY,KAAK9C,KAAL,CAAWD,OAAvB,CAJV;AAMH;AACJ;AACJ;AACJ,KAzBD;AA2BA,SAAK6C,QAAL,CAAc;AAAE7B,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACH;;AA+CDe,EAAAA,aAAa,CAAChC,CAAD,EAAI;AACb,SAAK8C,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMlB,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,UAAMC,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AAEAG,IAAAA,KAAK,CAAC8C,GAAN,CAAU,KAAKpD,KAAL,CAAWiB,MAArB,EAA6BoC,IAA7B,CAAmCd,CAAD,IAAO;AACrCA,MAAAA,CAAC,CAACe,GAAF,CAAM,QAAN,EAAgB,CAAhB;AACAf,MAAAA,CAAC,CAACgB,IAAF,GAASF,IAAT,CAAc,MAAM;AAChB,cAAMG,WAAW,GAAG,CAAC,GAAG,KAAKxD,KAAL,CAAWe,IAAf,CAApB;AACAyC,QAAAA,WAAW,CAACL,MAAZ,CAAmB,KAAKnD,KAAL,CAAWmB,SAA9B,EAAyC,CAAzC;AACA,aAAKyB,QAAL,CAAc;AACV7B,UAAAA,IAAI,EAAEyC,WADI;AAEVjC,UAAAA,QAAQ,EAAE,KAFA;AAGVF,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OARD;AASH,KAXD;AAYH;;AAEDV,EAAAA,gBAAgB,CAACb,CAAD,EAAI;AAChB,SAAK8C,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMlB,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,UAAMC,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AAEAG,IAAAA,KAAK,CAAC8C,GAAN,CAAUtD,CAAV,EAAauD,IAAb,CAAmBd,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACe,GAAF,CAAM,QAAN,EAAgB,CAAhB;AACAf,MAAAA,CAAC,CAACgB,IAAF,GAASF,IAAT,CAAc,MAAM;AAChB,cAAMG,WAAW,GAAG,CAAC,GAAG,KAAKxD,KAAL,CAAWe,IAAf,CAApB;AACAyC,QAAAA,WAAW,CAACL,MAAZ,CAAmB,KAAKnD,KAAL,CAAWmB,SAA9B,EAAyC,CAAzC;AACA,aAAKyB,QAAL,CAAc;AACV7B,UAAAA,IAAI,EAAEyC,WADI;AAEVjC,UAAAA,QAAQ,EAAE,KAFA;AAGVF,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OARD;AASH,KAXD;AAYH;;AAEDW,EAAAA,YAAY,CAAClC,CAAD,EAAI;AACZ,SAAK8C,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMlB,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,UAAMC,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AAEAG,IAAAA,KAAK,CAAC8C,GAAN,CAAU,KAAKpD,KAAL,CAAWiB,MAArB,EAA6BoC,IAA7B,CAAmCd,CAAD,IAAO;AACrCA,MAAAA,CAAC,CAACe,GAAF,CAAM,QAAN,EAAgB,CAAhB;AACAf,MAAAA,CAAC,CAACgB,IAAF,GAASF,IAAT,CAAc,MAAM;AAChB,cAAMG,WAAW,GAAG,CAAC,GAAG,KAAKxD,KAAL,CAAWe,IAAf,CAApB;AACAyC,QAAAA,WAAW,CAACL,MAAZ,CAAmB,KAAKnD,KAAL,CAAWmB,SAA9B,EAAyC,CAAzC;AACA,aAAKyB,QAAL,CAAc;AACV7B,UAAAA,IAAI,EAAEyC,WADI;AAEVhC,UAAAA,UAAU,EAAE,KAFF;AAGVH,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OARD;AASH,KAXD;AAYH;;AAEDR,EAAAA,eAAe,CAACf,CAAD,EAAI;AACf,SAAK8C,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMlB,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,UAAMC,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AAEAG,IAAAA,KAAK,CAAC8C,GAAN,CAAUtD,CAAV,EAAauD,IAAb,CAAmBd,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACe,GAAF,CAAM,QAAN,EAAgB,CAAhB;AACAf,MAAAA,CAAC,CAACgB,IAAF,GAASF,IAAT,CAAc,MAAM;AAChB,cAAMG,WAAW,GAAG,CAAC,GAAG,KAAKxD,KAAL,CAAWe,IAAf,CAApB;AACAyC,QAAAA,WAAW,CAACL,MAAZ,CAAmB,KAAKnD,KAAL,CAAWmB,SAA9B,EAAyC,CAAzC;AACA,aAAKyB,QAAL,CAAc;AACV7B,UAAAA,IAAI,EAAEyC,WADI;AAEVhC,UAAAA,UAAU,EAAE,KAFF;AAGVH,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OARD;AASH,KAXD;AAYH;;AAEDgB,EAAAA,UAAU,GAAG;AACT,SAAKO,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMlB,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,UAAMoD,MAAM,GAAGrE,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,QAApB,CAAf;AACA,UAAMqD,MAAM,GAAG,IAAID,MAAJ,EAAf;AACA,UAAMnD,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AAEA,UAAMwD,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAMC,KAAK,GAAG,IAAIvE,MAAJ,CAAWqE,CAAX,CAAd;AACAE,IAAAA,KAAK,CAACC,OAAN,CAAc,KAAd;AACA,UAAMC,MAAM,GAAG,IAAIzE,MAAJ,CAAWuE,KAAX,CAAf;AACAE,IAAAA,MAAM,CAACC,GAAP,CAAW,CAAX,EAAc,KAAd;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBe,KAAK,CAACI,MAAN,EAArB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBiB,MAAM,CAACE,MAAP,EAAtB;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY1D,KAAK,CAAC8E,IAAN,CAAWC,OAAX,GAAqBf,GAArB,CAAyB,UAAzB,EAAqC1C,EAAjD;AAEAgD,IAAAA,MAAM,CAAChD,EAAP,GAAYtB,KAAK,CAAC8E,IAAN,CAAWC,OAAX,GAAqBf,GAArB,CAAyB,UAAzB,EAAqC1C,EAAjD;AACAJ,IAAAA,KAAK,CAAC8D,OAAN,CAAc,UAAd,EAA0BV,MAA1B;AACApD,IAAAA,KAAK,CAAC8D,OAAN,CAAc,QAAd,EAAwB,CAAxB;AACA9D,IAAAA,KAAK,CAAC8D,OAAN,CAAc,YAAd,EAA4B,CAA5B;AACA9D,IAAAA,KAAK,CAAC+D,oBAAN,CAA2B,WAA3B,EAAwCR,KAAK,CAACI,MAAN,EAAxC;AACA3D,IAAAA,KAAK,CAACgE,QAAN,CAAe,WAAf,EAA4BP,MAAM,CAACE,MAAP,EAA5B;AACA3D,IAAAA,KAAK,CAACiE,IAAN,GAAalB,IAAb,CAAmBd,CAAD,IAAO;AACrBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACA,WAAKK,QAAL,CAAc;AAAE7B,QAAAA,IAAI,EAAEwB,CAAR;AAAWlB,QAAAA,OAAO,EAAE;AAApB,OAAd;AACH,KAHD;AAIH;;AAEDY,EAAAA,YAAY,CAACnC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAAC0E,cAAF;AACA,SAAK5B,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9C,KAAL,CAAWkB,MAAvB;AAEA,UAAMf,IAAI,GAAGf,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAb;AACA,UAAMoD,MAAM,GAAGrE,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAoB,QAApB,CAAf;AACA,UAAMqD,MAAM,GAAG,IAAID,MAAJ,EAAf;AACA,UAAMnD,KAAK,GAAG,IAAIlB,KAAK,CAACmB,KAAV,CAAgBJ,IAAhB,CAAd;AAEA,UAAMwD,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAMC,KAAK,GAAG,IAAIvE,MAAJ,CAAWqE,CAAX,CAAd;AACAE,IAAAA,KAAK,CAACC,OAAN,CAAc,KAAd;AACA,UAAMC,MAAM,GAAG,IAAIzE,MAAJ,CAAWuE,KAAX,CAAf;AACAE,IAAAA,MAAM,CAACC,GAAP,CAAW,CAAX,EAAc,KAAd;AAEAnB,IAAAA,OAAO,CAACC,GAAR,CAAY1D,KAAK,CAAC8E,IAAN,CAAWC,OAAX,GAAqBf,GAArB,CAAyB,UAAzB,EAAqC1C,EAAjD;AAEAgD,IAAAA,MAAM,CAAChD,EAAP,GAAYtB,KAAK,CAAC8E,IAAN,CAAWC,OAAX,GAAqBf,GAArB,CAAyB,UAAzB,EAAqC1C,EAAjD;AACAJ,IAAAA,KAAK,CAAC8D,OAAN,CAAc,UAAd,EAA0BV,MAA1B;AACApD,IAAAA,KAAK,CAAC8D,OAAN,CAAc,QAAd,EAAwBK,QAAQ,CAAC,KAAKzE,KAAL,CAAWkB,MAAZ,CAAhC;AACAZ,IAAAA,KAAK,CAAC8D,OAAN,CAAc,YAAd,EAA4B,CAA5B;AACA9D,IAAAA,KAAK,CAAC+D,oBAAN,CAA2B,WAA3B,EAAwCR,KAAK,CAACI,MAAN,EAAxC;AACA3D,IAAAA,KAAK,CAACgE,QAAN,CAAe,WAAf,EAA4BP,MAAM,CAACE,MAAP,EAA5B;AACA3D,IAAAA,KAAK,CAACiE,IAAN,GAAalB,IAAb,CAAmBd,CAAD,IAAO;AACrBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACA,WAAKK,QAAL,CAAc;AAAE7B,QAAAA,IAAI,EAAEwB,CAAR;AAAWlB,QAAAA,OAAO,EAAE;AAApB,OAAd;AACH,KAHD;AAIH;;AAEDqD,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAK1E,KADxC;AAAA,UACGe,IADH,eACGA,IADH;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBK,OADhB,eACgBA,OADhB;AAAA,UACyBsD,KADzB,eACyBA,KADzB;AAEL5D,IAAAA,IAAI,CAACN,GAAL,CAAU8B,CAAD,IAAOM,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACa,GAAF,CAAM,YAAN,CAAZ,CAAhB;AAFK,yBAaD,KAAKpD,KAbJ;AAAA,UAID4E,QAJC,gBAIDA,QAJC;AAAA,UAKDC,KALC,gBAKDA,KALC;AAAA,UAMDC,QANC,gBAMDA,QANC;AAAA,UAODC,YAPC,gBAODA,YAPC;AAAA,UAQDC,GARC,gBAQDA,GARC;AAAA,UASDC,GATC,gBASDA,GATC;AAAA,UAUDC,WAVC,gBAUDA,WAVC;AAAA,UAWDC,QAXC,gBAWDA,QAXC;AAAA,UAYDC,OAZC,gBAYDA,OAZC;;AAcL,UAAMC,OAAO,GAAIC,GAAD,iBAAS,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BA,GAA9B,CAAzB;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAE,KAAKtF,KAAL,CAAWwB,UADrB;AAEI,MAAA,KAAK,EAAC,qBAFV;AAGI,MAAA,UAAU,EAAE,MAAM,KAAKoB,QAAL,CAAc;AAAEpB,QAAAA,UAAU,EAAE;AAAd,OAAd,CAHtB;AAII,MAAA,UAAU,EAAE,KAAKQ,YAJrB;AAKI,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAWqB,OALxB;AAMI,MAAA,IAAI,EAAE,oBAAoB,KAAKrB,KAAL,CAAWoB,SAA/B,GAA2C,IANrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWuB,QADrB;AAEI,MAAA,KAAK,EAAC,sBAFV;AAGI,MAAA,UAAU,EAAE,KAAKO,aAHrB;AAII,MAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWqB,OAJxB;AAKI,MAAA,UAAU,EAAE,MAAM,KAAKuB,QAAL,CAAc;AAAErB,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CALtB;AAMI,MAAA,IAAI,EAAE,qBAAqB,KAAKvB,KAAL,CAAWoB,SAAhC,GAA4C,IANtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAiBI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAC,IADT;AAEI,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAW6B,SAFrB;AAGI,MAAA,KAAK,EAAC,gBAHV,CAII;AAJJ;AAKI,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWqB,OALxB;AAMI,MAAA,QAAQ,EAAC,UANb;AAOI,MAAA,UAAU,EAAE,MAAM,KAAKuB,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAE;AAAb,OAAd,CAPtB;AAQI,MAAA,IAAI,eAAE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,MAAM,EAAE,GAA1B;AAA+B,QAAA,GAAG,EAAE,KAAK7B,KAAL,CAAW4B,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,eA4BI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,cADV;AAEI,MAAA,gBAAgB,MAFpB;AAGI,MAAA,iBAAiB,MAHrB;AAII,MAAA,OAAO,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AACI,QAAA,QAAQ,EAAE,KAAKK,YADnB;AAEI,QAAA,KAAK,EAAE;AAAEsD,UAAAA,YAAY,EAAE;AAAhB,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,EAAE,EAAEnH,GADR;AAEI,QAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CAJJ,eAOI,oBAAC,GAAD;AACI,QAAA,EAAE,EAAE;AAAEoH,UAAAA,IAAI,EAAE;AAAR,SADR;AAEI,QAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,IAAD,CAAM,OAAN;AACI,QAAA,EAAE,EAAC,QADP,CAEI;AAFJ;AAGI,QAAA,QAAQ,EAAG1F,CAAD,IAAO;AACb+C,UAAAA,OAAO,CAACC,GAAR,CAAYhD,CAAC,CAAC2C,MAAF,CAASM,KAArB;AACA,eAAKH,QAAL,CAAc;AACV1B,YAAAA,MAAM,EAAEpB,CAAC,CAAC2C,MAAF,CAASM;AADP,WAAd;AAGH,SARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUtC,GAAV,CAAe8B,CAAD,iBACX;AAAQ,QAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK9C,aAAa,CAAC8C,CAAD,CADlB,CADH,CAVL,CAJJ,CAPJ,eA4BI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAElB,OAAO,GAAG,MAAH,GAAY,OAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAKmC,GALnC,EAMKA,OAAO,GAAG,aAAH,GAAmB,QAN/B,CADJ,CA5BJ,CAJJ,CADJ,CADJ,CADJ,eAiDI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEmE,UAAAA,IAAI,EAAE;AAAR,SAAT;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAEnE,OAAO,GAAG,MAAH,GAAY,OAHhC;AAII,QAAA,SAAS,EAAC,UAJd;AAKI,QAAA,OAAO,EAAE,KAAKxB,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAOkC,GAPlC,EAQKwB,OAAO,GAAG,aAAH,GAAmB,SAR/B,CADJ,eAWI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,SAAS,EAAC,KAHd;AAII,QAAA,OAAO,EAAEA,OAAO,GAAG,MAAH,GAAY,OAJhC;AAKI,QAAA,OAAO,EAAE,KAAKT,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAOkC,GAPlC,EAQKS,OAAO,GAAG,aAAH,GAAmB,QAR/B,CAXJ,CAjDJ,eAuEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,IAAI,CAACb,MAAL,GAAc,CAAd,gBACG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,gBAGO,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAE,KAAKgC,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,CADJ,CADJ,eAiBI;AAAO,QAAA,GAAG,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKnB,IAAI,CAACN,GAAL,CAAS,CAACgF,IAAD,EAAOC,GAAP,kBACN;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAED,IAAI,CAAC/E,EAFhB;AAGI,QAAA,OAAO,EAAE+E,IAAI,CAACjD,SAHlB;AAII,QAAA,QAAQ,EACJ,KAAKL,gBALb,CAOA;AACA;AACA;AAEA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKsD,IAAI,CAACrC,GAAL,CAAS,UAAT,CAAL,CAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKqC,IAAI,CAACrC,GAAL,CAAS,UAAT,CAAL,CAjBJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKqC,IAAI,CAACrC,GAAL,CAAS,YAAT,CAAL,CAlBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK9D,MAAM,CACHmG,IAAI,CAACrC,GAAL,CAAS,MAAT,CADG,CAAN,CAECuC,MAFD,CAEQ,YAFR,CADL,CAnBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKrG,MAAM,CACHmG,IAAI,CAACrC,GAAL,CAAS,QAAT,CADG,CAAN,CAECuC,MAFD,CAEQ,YAFR,CADL,CAxBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,IAAI,CAACG,UAAL,CAAgBC,UAAhB,IACGC,SADH,GAEO,EAFP,gBAIO,oBAAC,cAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,OAAO,EAAET,OAAO,CACZ,SADY,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,6BADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACX,eAAKzC,QAAL,CAAc;AACVrB,YAAAA,QAAQ,EAAE,IADA;AAEVN,YAAAA,MAAM,EAAEwE,IAAI,CAAC/E,EAFH;AAGVS,YAAAA,SAAS,EAAEuE,GAHD;AAIVtE,YAAAA,SAAS,EAAEqE,IAAI,CAACrC,GAAL,CACP,UADO;AAJD,WAAd;AAQH,SAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CANJ,CALZ,eA4BI,oBAAC,cAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,OAAO,EAAEiC,OAAO,CACZ,UADY,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,6BADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACX,eAAKzC,QAAL,CAAc;AACVrB,YAAAA,QAAQ,EAAE,IADA;AAEVN,YAAAA,MAAM,EAAEwE,IAAI,CAAC/E,EAFH;AAGVS,YAAAA,SAAS,EAAEuE,GAHD;AAIVtE,YAAAA,SAAS,EAAEqE,IAAI,CAACrC,GAAL,CACP,UADO;AAJD,WAAd;AAQH,SAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CANJ,CA5BJ,eAkDI,oBAAC,cAAD;AACI,QAAA,SAAS,EAAC,OADd;AAEI,QAAA,OAAO,EAAEiC,OAAO,CAAC,QAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,uBADd;AAEI,QAAA,OAAO,EAAGvF,CAAD,IAAO;AACZ,eAAK8C,QAAL,CAAc;AACVpB,YAAAA,UAAU,EAAE,IADF;AAEVP,YAAAA,MAAM,EAAEwE,IAAI,CAAC/E,EAFH;AAGVS,YAAAA,SAAS,EAAEuE,GAHD;AAIVtE,YAAAA,SAAS,EAAEqE,IAAI,CAACrC,GAAL,CACP,UADO;AAJD,WAAd;AAQH,SAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CAJJ,CAlDJ,CA7BJ,CADH,CADL,CAjBJ,CADJ,CAHP,CAgIO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvNZ,OAvEJ,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CA5BJ,CADJ;AAiVH;;AA1mBwB;;AA6mB7B,eAAe1D,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    ControlLabel,\r\n    FormControl,\r\n    Form,\r\n    Tooltip,\r\n    OverlayTrigger,\r\n    Table\r\n} from 'react-bootstrap';\r\n\r\nimport { Card } from 'components/Card/Card.jsx';\r\nimport { FormInputs } from 'components/FormInputs/FormInputs.jsx';\r\nimport { UserCard } from 'components/UserCard/UserCard.jsx';\r\nimport Button from 'components/CustomButton/CustomButton.jsx';\r\n\r\nimport avatar from 'assets/img/faces/face-3.jpg';\r\nimport Axios from 'axios';\r\nimport { baseurl } from 'utils/baseurl';\r\nimport Parse from 'parse';\r\nimport ModalHandler from './Category/ModalHandler';\r\nimport moment from 'moment';\r\nimport DateTime from 'react-datetime';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleConvert } from 'utils/converter';\r\n\r\nclass Cuti extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            trainee: [],\r\n            izin: [],\r\n            error: '',\r\n            userId: '',\r\n            status: 3,\r\n            userIndex: 0,\r\n            fullnames: '',\r\n            loading: false,\r\n            addMode: false,\r\n            editMode: false,\r\n            deleteMode: false,\r\n            buttonLoading: false,\r\n            checkAll: false,\r\n            checkId: [],\r\n            checkOne: false,\r\n            lampiran: '',\r\n            photoMode: false\r\n        };\r\n\r\n        this.handleApprove = this.handleApprove.bind(this);\r\n        this.handleReject = this.handleReject.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAllCheck = this.handleAllCheck.bind(this);\r\n        this.handleChildCheck = this.handleChildCheck.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTrainee();\r\n    }\r\n\r\n    handleAllCheck(e) {\r\n        let izin = this.state.izin;\r\n        let collecId = [];\r\n\r\n        izin.map((x) => {\r\n            x.isChecked = e.target.checked;\r\n            if (x.isChecked) {\r\n                collecId.push(x.id);\r\n            } else {\r\n                collecId = [];\r\n            }\r\n\r\n            return x;\r\n        });\r\n\r\n        this.setState({ izin: izin, checkId: collecId }, () => console.log(this.state.checkId));\r\n    }\r\n\r\n    handleChildCheck(e) {\r\n        let { izin } = this.state;\r\n        const { checkId } = this.state;\r\n        let checked = e.target.value;\r\n        izin.map((x) => {\r\n            console.log('bandingkan', x.id === e.target.value);\r\n            if (x.id === e.target.value) {\r\n                console.log('sama');\r\n                x.isChecked = e.target.checked;\r\n                if (x.isChecked) {\r\n                    this.setState(\r\n                        (prevState) => ({\r\n                            checkId: [...this.state.checkId, checked]\r\n                        }),\r\n                        () => console.log(this.state.checkId)\r\n                    );\r\n                } else {\r\n                    const index = checkId.indexOf(checked);\r\n                    if (index > -1) {\r\n                        checkId.splice(index, 1);\r\n                        this.setState(\r\n                            (prevState) => ({\r\n                                checkId: checkId\r\n                            }),\r\n                            () => console.log(this.state.checkId)\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({ izin: izin });\r\n    }\r\n\r\n    approveChecked = (e) => {\r\n        const { checkId } = this.state;\r\n        const checkIdLength = checkId.length;\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const query = new Parse.Query(Izin);\r\n        let totalData = 0;\r\n\r\n        checkId.map((id) => {\r\n            this.handleApproveAll(id);\r\n            // console.log(id);\r\n            // //query.equalTo('objectId', id);\r\n            // query.get(id).then((x) => {\r\n            //     // x.set('status', 1);\r\n            //     // x.save().then((x) => {\r\n            //     //  console.log('success');\r\n            //     // });\r\n            //     console.log(x);\r\n            // });\r\n            // query\r\n            //  .get(id)\r\n            //  .then((x) => {\r\n            //      x.set('status', 1);\r\n            //      x\r\n            //          .save()\r\n            //          .then((x) => {\r\n            //              console.log('success');\r\n            //              totalData++;\r\n            //              if (totalData == checkIdLength) {\r\n            //                  console.log('stop');\r\n            //                  this.setState({ checkId: [] });\r\n            //              }\r\n            //          })\r\n            //          .catch((err) => this.setState({ error: err }));\r\n            //  })\r\n        });\r\n    };\r\n\r\n    rejectChecked = (e) => {\r\n        const { checkId } = this.state;\r\n\r\n        checkId.map((id) => {\r\n            this.handleRejectAll(id);\r\n        })\r\n    };\r\n\r\n    handleApprove(e) {\r\n        this.setState({ loading: true });\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const query = new Parse.Query(Izin);\r\n\r\n        query.get(this.state.userId).then((x) => {\r\n            x.set('status', 1);\r\n            x.save().then(() => {\r\n                const newOvertime = [...this.state.izin];\r\n                newOvertime.splice(this.state.userIndex, 1);\r\n                this.setState({\r\n                    izin: newOvertime,\r\n                    editMode: false,\r\n                    loading: false\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleApproveAll(e) {\r\n        this.setState({ loading: true });\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const query = new Parse.Query(Izin);\r\n\r\n        query.get(e).then((x) => {\r\n            x.set('status', 1);\r\n            x.save().then(() => {\r\n                const newOvertime = [...this.state.izin];\r\n                newOvertime.splice(this.state.userIndex, 1);\r\n                this.setState({\r\n                    izin: newOvertime,\r\n                    editMode: false,\r\n                    loading: false\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleReject(e) {\r\n        this.setState({ loading: false });\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const query = new Parse.Query(Izin);\r\n\r\n        query.get(this.state.userId).then((x) => {\r\n            x.set('status', 0);\r\n            x.save().then(() => {\r\n                const newOvertime = [...this.state.izin];\r\n                newOvertime.splice(this.state.userIndex, 1);\r\n                this.setState({\r\n                    izin: newOvertime,\r\n                    deleteMode: false,\r\n                    loading: false\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleRejectAll(e) {\r\n        this.setState({ loading: false });\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const query = new Parse.Query(Izin);\r\n\r\n        query.get(e).then((x) => {\r\n            x.set('status', 0);\r\n            x.save().then(() => {\r\n                const newOvertime = [...this.state.izin];\r\n                newOvertime.splice(this.state.userIndex, 1);\r\n                this.setState({\r\n                    izin: newOvertime,\r\n                    deleteMode: false,\r\n                    loading: false\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    getTrainee() {\r\n        this.setState({ loading: true });\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const Leader = Parse.Object.extend('Leader');\r\n        const leader = new Leader();\r\n        const query = new Parse.Query(Izin);\r\n\r\n        const d = new Date();\r\n        const start = new moment(d);\r\n        start.startOf('day');\r\n        const finish = new moment(start);\r\n        finish.add(1, 'day');\r\n        console.log('start', start.toDate());\r\n        console.log('finsih', finish.toDate());\r\n        console.log(Parse.User.current().get('leaderId').id);\r\n\r\n        leader.id = Parse.User.current().get('leaderId').id;\r\n        query.equalTo('leaderId', leader);\r\n        query.equalTo('status', 3);\r\n        query.equalTo('statusIzin', 2);\r\n        query.greaterThanOrEqualTo('createdAt', start.toDate());\r\n        query.lessThan('createdAt', finish.toDate());\r\n        query.find().then((x) => {\r\n            console.log(x);\r\n            this.setState({ izin: x, loading: false });\r\n        });\r\n    }\r\n\r\n    handleFilter(e) {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n        console.log(this.state.status);\r\n\r\n        const Izin = Parse.Object.extend('Izin');\r\n        const Leader = Parse.Object.extend('Leader');\r\n        const leader = new Leader();\r\n        const query = new Parse.Query(Izin);\r\n\r\n        const d = new Date();\r\n        const start = new moment(d);\r\n        start.startOf('day');\r\n        const finish = new moment(start);\r\n        finish.add(1, 'day');\r\n\r\n        console.log(Parse.User.current().get('leaderId').id);\r\n\r\n        leader.id = Parse.User.current().get('leaderId').id;\r\n        query.equalTo('leaderId', leader);\r\n        query.equalTo('status', parseInt(this.state.status));\r\n        query.equalTo('statusIzin', 2);\r\n        query.greaterThanOrEqualTo('createdAt', start.toDate());\r\n        query.lessThan('createdAt', finish.toDate());\r\n        query.find().then((x) => {\r\n            console.log(x);\r\n            this.setState({ izin: x, loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { izin, error, loading, batch } = this.state;\r\n        izin.map((x) => console.log(x.get('alasanIzin')));\r\n        const {\r\n            username,\r\n            email,\r\n            password,\r\n            passwordConf,\r\n            dob,\r\n            pob,\r\n            phoneNumber,\r\n            fullname,\r\n            profile\r\n        } = this.state;\r\n        const tooltip = (msg) => <Tooltip id=\"button-tooltip\">{msg}</Tooltip>;\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <ModalHandler\r\n                    show={this.state.deleteMode}\r\n                    title=\"Reject confirmation\"\r\n                    handleHide={() => this.setState({ deleteMode: false })}\r\n                    handleSave={this.handleReject}\r\n                    loading={this.state.loading}\r\n                    body={'Reject request ' + this.state.fullnames + ' ?'}\r\n                />\r\n                <ModalHandler\r\n                    show={this.state.editMode}\r\n                    title=\"Approve confirmation\"\r\n                    handleSave={this.handleApprove}\r\n                    loading={this.state.loading}\r\n                    handleHide={() => this.setState({ editMode: false })}\r\n                    body={'Approve request ' + this.state.fullnames + ' ?'}\r\n                />\r\n                <ModalHandler\r\n                    size=\"lg\"\r\n                    show={this.state.photoMode}\r\n                    title=\"Lampiran staff\"\r\n                    //handleSave={this.handleApprove}\r\n                    loading={this.state.loading}\r\n                    saveText=\"Download\"\r\n                    handleHide={() => this.setState({ photoMode: false })}\r\n                    body={<img width=\"100%\" height={300} src={this.state.lampiran} />}\r\n                />\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Card\r\n                                title=\"Request cuti\"\r\n                                ctTableFullWidth\r\n                                ctTableResponsive\r\n                                content={\r\n                                    <div>\r\n                                        <Row>\r\n                                            <Col sm={6}>\r\n                                                <Form\r\n                                                    onSubmit={this.handleFilter}\r\n                                                    style={{ marginBottom: '20px' }}\r\n                                                >\r\n                                                    <Form.Group\r\n                                                        as={Row}\r\n                                                        controlId=\"formHorizontalEmail\"\r\n                                                    >\r\n                                                        <Col sm={4}>\r\n                                                            <p>Search by approval</p>\r\n                                                        </Col>\r\n                                                        <Col\r\n                                                            sm={{ span: 2 }}\r\n                                                            className=\"pull-right\"\r\n                                                        >\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                // defaultValue={1}\r\n                                                                onChange={(e) => {\r\n                                                                    console.log(e.target.value);\r\n                                                                    this.setState({\r\n                                                                        status: e.target.value\r\n                                                                    });\r\n                                                                }}\r\n                                                            >\r\n                                                                {[3, 1, 0].map((x) => (\r\n                                                                    <option value={x}>\r\n                                                                        {handleConvert(x)}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                        <Col sm={4}>\r\n                                                            <Button\r\n                                                                variant=\"primary\"\r\n                                                                type=\"submit\"\r\n                                                                disable={loading ? 'true' : 'false'}\r\n                                                            >\r\n                                                                <i className=\"fa fa-search\" />{' '}\r\n                                                                {loading ? 'Fetching...' : 'Search'}\r\n                                                            </Button>\r\n                                                        </Col>\r\n                                                    </Form.Group>\r\n                                                </Form>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col sm={{ span: 0 }} className=\"float-none\">\r\n                                            <Button\r\n                                                variant=\"primary\"\r\n                                                type=\"submit\"\r\n                                                disable={loading ? 'true' : 'false'}\r\n                                                className=\"mr-2 m-1\"\r\n                                                onClick={this.approveChecked}\r\n                                            >\r\n                                                <i className=\"fa fa-check\" />{' '}\r\n                                                {loading ? 'Fetching...' : 'Approve'}\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"primary\"\r\n                                                type=\"submit\"\r\n                                                className=\"m-1\"\r\n                                                disable={loading ? 'true' : 'false'}\r\n                                                onClick={this.rejectChecked}\r\n                                            >\r\n                                                <i className=\"fa fa-close\" />{' '}\r\n                                                {loading ? 'Fetching...' : 'Reject'}\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Row>\r\n                                            {izin.length < 1 ? (\r\n                                                <Col md={12}>No data found...</Col>\r\n                                            ) : (\r\n                                                    <Col md={12}>\r\n                                                        <Table striped hover>\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>\r\n                                                                        <Form.Check\r\n                                                                            type=\"checkbox\"\r\n                                                                            onClick={this.handleAllCheck}\r\n                                                                        />\r\n                                                                    </th>\r\n                                                                    <th>NAME</th>\r\n                                                                    <th>DESKRIPSI IZIN</th>\r\n                                                                    <th>ALASAN IZIN</th>\r\n                                                                    <th>DARI</th>\r\n                                                                    <th>SAMPAI</th>\r\n                                                                    <th>ACTION</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody key={1}>\r\n                                                                {izin.map((prop, key) => (\r\n                                                                    <tr key={key}>\r\n                                                                        <td>\r\n                                                                            <Form.Check\r\n                                                                                type=\"checkbox\"\r\n                                                                                value={prop.id}\r\n                                                                                checked={prop.isChecked}\r\n                                                                                onChange={\r\n                                                                                    this.handleChildCheck\r\n                                                                                }\r\n                                                                            // onChange={(e) => {\r\n                                                                            //  const checked =\r\n                                                                            //      e.target.checked;\r\n\r\n                                                                            // }}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td>{prop.get('fullname')}</td>\r\n                                                                        <td>{prop.get('descIzin')}</td>\r\n                                                                        <td>{prop.get('alasanIzin')}</td>\r\n                                                                        <td>\r\n                                                                            {moment(\r\n                                                                                prop.get('dari')\r\n                                                                            ).format('DD/MM/YYYY')}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {moment(\r\n                                                                                prop.get('sampai')\r\n                                                                            ).format('DD/MM/YYYY')}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {prop.attributes.attachFile ==\r\n                                                                                undefined ? (\r\n                                                                                    ''\r\n                                                                                ) : (\r\n                                                                                    <OverlayTrigger\r\n                                                                                        placement=\"right\"\r\n                                                                                        overlay={tooltip(\r\n                                                                                            'Approve'\r\n                                                                                        )}\r\n                                                                                    >\r\n                                                                                        <Button\r\n                                                                                            className=\"btn-circle btn-warning mr-2\"\r\n                                                                                            onClick={() => {\r\n                                                                                                this.setState({\r\n                                                                                                    editMode: true,\r\n                                                                                                    userId: prop.id,\r\n                                                                                                    userIndex: key,\r\n                                                                                                    fullnames: prop.get(\r\n                                                                                                        'fullname'\r\n                                                                                                    )\r\n                                                                                                });\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <i className=\"fa fa-eye\" />\r\n                                                                                        </Button>\r\n                                                                                    </OverlayTrigger>\r\n                                                                                )}\r\n                                                                            <OverlayTrigger\r\n                                                                                placement=\"right\"\r\n                                                                                overlay={tooltip(\r\n                                                                                    'Lampiran'\r\n                                                                                )}\r\n                                                                            >\r\n                                                                                <Button\r\n                                                                                    className=\"btn-circle btn-warning mr-2\"\r\n                                                                                    onClick={() => {\r\n                                                                                        this.setState({\r\n                                                                                            editMode: true,\r\n                                                                                            userId: prop.id,\r\n                                                                                            userIndex: key,\r\n                                                                                            fullnames: prop.get(\r\n                                                                                                'fullname'\r\n                                                                                            )\r\n                                                                                        });\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    <i className=\"fa fa-check\" />\r\n                                                                                </Button>\r\n                                                                            </OverlayTrigger>\r\n                                                                            <OverlayTrigger\r\n                                                                                placement=\"right\"\r\n                                                                                overlay={tooltip('Reject')}\r\n                                                                            >\r\n                                                                                <Button\r\n                                                                                    className=\"btn-circle btn-danger\"\r\n                                                                                    onClick={(e) => {\r\n                                                                                        this.setState({\r\n                                                                                            deleteMode: true,\r\n                                                                                            userId: prop.id,\r\n                                                                                            userIndex: key,\r\n                                                                                            fullnames: prop.get(\r\n                                                                                                'fullname'\r\n                                                                                            )\r\n                                                                                        });\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    <i className=\"fa fa-close\" />\r\n                                                                                </Button>\r\n                                                                            </OverlayTrigger>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                ))}\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Col>\r\n                                                    // <Col md={3}>\r\n                                                    //  <UserCard\r\n                                                    //      out={x.status}\r\n                                                    //      bgImage={\r\n                                                    //          <img\r\n                                                    //              src=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\r\n                                                    //              alt=\"...\"\r\n                                                    //          />\r\n                                                    //      }\r\n                                                    //      avatar={\r\n                                                    //          x.attributes.attachFile ==\r\n                                                    //          undefined ? (\r\n                                                    //              'https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400'\r\n                                                    //          ) : (\r\n                                                    //              x.attributes.attachFile.url()\r\n                                                    //          )\r\n                                                    //      }\r\n                                                    //      name={x\r\n                                                    //          .get('fullname')\r\n                                                    //          .split(' ')\r\n                                                    //          .slice(0, 2)\r\n                                                    //          .join(' ')}\r\n                                                    //      userName={x.get('descIzin')}\r\n                                                    //      description={\r\n                                                    //          <span>\r\n                                                    //              <strong>Alasan</strong>\r\n                                                    //              <br />\r\n                                                    //              {x.get('alasanIzin') !== '-' ||\r\n                                                    //              x.get('alasanIzin') ===\r\n                                                    //                  undefined ? (\r\n                                                    //                  x.get('alasanIzin')\r\n                                                    //              ) : (\r\n                                                    //                  'Surat terlampir'\r\n                                                    //              )}\r\n                                                    //              {/* <br />\r\n                                                    //              {x.dateOfBirth}\r\n                                                    //              <br />\r\n                                                    //              {x.phoneNumber} */}\r\n                                                    //          </span>\r\n                                                    //      }\r\n                                                    //      status={x.get('status')}\r\n                                                    //      socials={\r\n                                                    //          <div>\r\n                                                    //              <OverlayTrigger\r\n                                                    //                  placement=\"right\"\r\n                                                    //                  overlay={tooltip('Approve')}\r\n                                                    //              >\r\n                                                    //                  <Button\r\n                                                    //                      simple\r\n                                                    //                      onClick={() => {\r\n                                                    //                          this.setState({\r\n                                                    //                              editMode: true,\r\n                                                    //                              userId: x.id,\r\n                                                    //                              userIndex: i,\r\n                                                    //                              fullnames: x.get(\r\n                                                    //                                  'fullname'\r\n                                                    //                              )\r\n                                                    //                          });\r\n                                                    //                      }}\r\n                                                    //                  >\r\n                                                    //                      <i className=\"fa fa-check\" />\r\n                                                    //                  </Button>\r\n                                                    //              </OverlayTrigger>\r\n                                                    //              <OverlayTrigger\r\n                                                    //                  placement=\"right\"\r\n                                                    //                  overlay={tooltip('Reject')}\r\n                                                    //              >\r\n                                                    //                  <Button\r\n                                                    //                      simple\r\n                                                    //                      onClick={(e) => {\r\n                                                    //                          this.setState({\r\n                                                    //                              deleteMode: true,\r\n                                                    //                              userId: x.id,\r\n                                                    //                              userIndex: i,\r\n                                                    //                              fullnames: x.get(\r\n                                                    //                                  'fullname'\r\n                                                    //                              )\r\n                                                    //                          });\r\n                                                    //                      }}\r\n                                                    //                  >\r\n                                                    //                      <i className=\"fa fa-close\" />\r\n                                                    //                  </Button>\r\n                                                    //              </OverlayTrigger>\r\n                                                    //          </div>\r\n                                                    //      }\r\n                                                    //  />\r\n                                                    // </Col>\r\n                                                )}\r\n                                        </Row>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* </Col> */}\r\n                    {/* </Row> */}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cuti;"]},"metadata":{},"sourceType":"module"}