{"ast":null,"code":"import _objectWithoutProperties from \"E:\\\\Node.js Project\\\\project dika\\\\dika-attend\\\\react-attend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\Node.js Project\\\\project dika\\\\dika-attend\\\\react-attend\\\\src\\\\views\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\nimport AdminLayout from 'layouts/Admin';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    React.createElement(Route, Object.assign({\n      exact: true\n    }, rest, {\n      render: props => isLogin() ? /*#__PURE__*/React.createElement(AdminLayout, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 36\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 3\n      }\n    })) // <Route\n    //   {...rest}\n    //   render={(props) => (isLogin() ? <Component {...props} /> : <Component {...props} />)}\n    // />\n\n  );\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["E:/Node.js Project/project dika/dika-attend/react-attend/src/views/PrivateRoute.jsx"],"names":["React","Route","Redirect","isLogin","AdminLayout","PrivateRoute","Component","component","rest","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAY,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAC3D;AAAA;AACC;AACA;AACA,wBAAC,KAAD;AACC,MAAA,KAAK;AADN,OAEKA,IAFL;AAGC,MAAA,MAAM,EAAGC,KAAD,IAAYN,OAAO,kBAAK,oBAAC,WAAD,oBAAiBM,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAL,gBAAkC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHD,CAQC;AACA;AACA;AACA;;AAXD;AAaA,CAdD;;AAgBA,eAAeJ,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from '../utils';\r\nimport AdminLayout from 'layouts/Admin';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t// Show the component only when the user is logged in\r\n\t\t// Otherwise, redirect the user to /signin page\r\n\t\t<Route\r\n\t\t\texact\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) => (isLogin() ? <AdminLayout {...props} /> : <Redirect to=\"/login\" />)}\r\n\t\t/>\r\n\t\t// <Route\r\n\t\t//   {...rest}\r\n\t\t//   render={(props) => (isLogin() ? <Component {...props} /> : <Component {...props} />)}\r\n\t\t// />\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}